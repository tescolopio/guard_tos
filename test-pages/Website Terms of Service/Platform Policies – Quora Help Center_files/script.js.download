/*
 * jQuery v1.9.1 included
 */

$(document).ready(function() {

  // social share popups
  $(".share a").click(function(e) {
    e.preventDefault();
    window.open(this.href, "", "height = 500, width = 500");
  });

  // show form controls when the textarea receives focus or backbutton is used and value exists
  var $commentContainerTextarea = $(".comment-container textarea"),
  $commentContainerFormControls = $(".comment-form-controls, .comment-ccs");

  $commentContainerTextarea.one("focus", function() {
    $commentContainerFormControls.show();
  });

  if ($commentContainerTextarea.val() !== "") {
    $commentContainerFormControls.show();
  }

  // Expand Request comment form when Add to conversation is clicked
  var $showRequestCommentContainerTrigger = $(".request-container .comment-container .comment-show-container"),
    $requestCommentFields = $(".request-container .comment-container .comment-fields"),
    $requestCommentSubmit = $(".request-container .comment-container .request-submit-comment");

  $showRequestCommentContainerTrigger.on("click", function() {
    $showRequestCommentContainerTrigger.hide();
    $requestCommentFields.show();
    $requestCommentSubmit.show();
    $commentContainerTextarea.focus();
  });

  // Mark as solved button
  var $requestMarkAsSolvedButton = $(".request-container .mark-as-solved:not([data-disabled])"),
    $requestMarkAsSolvedCheckbox = $(".request-container .comment-container input[type=checkbox]"),
    $requestCommentSubmitButton = $(".request-container .comment-container input[type=submit]");

  $requestMarkAsSolvedButton.on("click", function () {
    $requestMarkAsSolvedCheckbox.attr("checked", true);
    $requestCommentSubmitButton.prop("disabled", true);
    $(this).attr("data-disabled", true).closest("form").submit();
  });

  // Change Mark as solved text according to whether comment is filled
  var $requestCommentTextarea = $(".request-container .comment-container textarea");

  $requestCommentTextarea.on("keyup", function() {
    if ($requestCommentTextarea.val() !== "") {
      $requestMarkAsSolvedButton.text($requestMarkAsSolvedButton.data("solve-and-submit-translation"));
      $requestCommentSubmitButton.prop("disabled", false);
    } else {
      $requestMarkAsSolvedButton.text($requestMarkAsSolvedButton.data("solve-translation"));
      $requestCommentSubmitButton.prop("disabled", true);
    }
  });

  // Disable submit button if textarea is empty
  if ($requestCommentTextarea.val() === "") {
    $requestCommentSubmitButton.prop("disabled", true);
  }

  // Submit requests filter form in the request list page
  $("#request-status-select, #request-organization-select")
    .on("change", function() {
      search();
    });

  // Submit requests filter form in the request list page
  $("#quick-search").on("keypress", function(e) {
    if (e.which === 13) {
      search();
    }
  });

  function search() {
    window.location.search = $.param({
      query: $("#quick-search").val(),
      status: $("#request-status-select").val(),
      organization_id: $("#request-organization-select").val()
    });
  }

  $(".header .icon-menu").on("click", function(e) {
    e.stopPropagation();
    var menu = document.getElementById("user-nav");
    var isExpanded = menu.getAttribute("aria-expanded") === "true";
    menu.setAttribute("aria-expanded", !isExpanded);
  });

  if ($("#user-nav").children().length === 0) {
    $(".header .icon-menu").hide();
  }

  // Submit organization form in the request page
  $("#request-organization select").on("change", function() {
    this.form.submit();
  });
  
  
  // Disable default fields, 'Subject' & 'Description' for copyright infringement form
	
  var ticketForm = location.search.split('ticket_form_id=')[1];
	
	if(ticketForm == 360000010543) {
  $('.form-field.request_subject').hide(); // Hide subject
  $('.form-field.request_description').hide(); // Hide description
	$('#request_subject').val('Copyright Infringement Claim'); // autofill subject 
	$('#request_description').val('Notice of alleged copyright infringement'); // autofill description
	}
  
  // Disable default fields, 'Subject' & 'Description' for trademark infringement form
	
  var ticketForm = location.search.split('ticket_form_id=')[1];
	
	if(ticketForm == 360000018006) {
  $('.form-field.request_subject').hide(); // Hide subject
  $('.form-field.request_description').hide(); // Hide description
	$('#request_subject').val('Trademark Infringement Claim'); // autofill subject 
	$('#request_description').val('Notice of alleged trademark infringement'); // autofill description
	}
  
  // Disable default fields, 'Subject' & 'Description' for other infringement form
	
  var ticketForm = location.search.split('ticket_form_id=')[1];
	
	if(ticketForm == 360000018026) {
  $('.form-field.request_subject').hide(); // Hide subject
  $('.form-field.request_description').hide(); // Hide description
	$('#request_subject').val('Other Infringement Claim'); // autofill subject 
	$('#request_description').val('Notice of alleged infringement of a legal right and/or Quora policy'); // autofill description
	}
  
  // Disable default fields, 'Subject' & 'Description' for data request form
	
  var ticketForm = location.search.split('ticket_form_id=')[1];
	
	if(ticketForm == 360000639531) {
  $('.form-field.request_subject').hide(); // Hide subject
  $('.form-field.request_description').hide(); // Hide description
	$('#request_subject').val('Data Request'); // autofill subject 
	$('#request_description').val('Data request from quora.com/contact'); // autofill description
	}
  
  // Disable default fields, 'Subject' & 'Description' for data/account deletion form
	
  var ticketForm = location.search.split('ticket_form_id=')[1];
	
	if(ticketForm == 360000639591) {
  $('.form-field.request_subject').hide(); // Hide subject
  $('.form-field.request_description').hide(); // Hide description  
	$('#request_subject').val('Account Deletion Request'); // autofill subject
  $('#request_description').val('Account deletion request from quora.com/contact'); // autofill description  
	}
  
  // Toggles expanded aria to collapsible elements
  $(".collapsible-nav, .collapsible-sidebar").on("click", function(e) {
    e.stopPropagation();
    var isExpanded = this.getAttribute("aria-expanded") === "true";
    this.setAttribute("aria-expanded", !isExpanded);
  });
});
