(B=>{var F={};function n(Q){var U;return(F[Q]||(U=F[Q]={i:Q,l:!1,exports:{}},B[Q].call(U.exports,U,U.exports,n),U.l=!0,U)).exports}n.m=B,n.c=F,n.d=function(Q,U,B){n.o(Q,U)||Object.defineProperty(Q,U,{enumerable:!0,get:B})},n.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},n.t=function(U,Q){if(1&Q&&(U=n(U)),8&Q)return U;if(4&Q&&"object"==typeof U&&U&&U.__esModule)return U;var B=Object.create(null);if(n.r(B),Object.defineProperty(B,"default",{enumerable:!0,value:U}),2&Q&&"string"!=typeof U)for(var F in U)n.d(B,F,function(Q){return U[Q]}.bind(null,F));return B},n.n=function(Q){var U=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return n.d(U,"a",U),U},n.o=function(Q,U){return Object.prototype.hasOwnProperty.call(Q,U)},n.p="/",n(n.s=877)})({0:function(module,exports,__webpack_require__){eval('// TODO(Babel 8): Remove this file.\n\nvar runtime = __webpack_require__(37)();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === "object") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function("r", "regeneratorRuntime = r")(runtime);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanM/YTM0YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxjQUFjLG1CQUFPLENBQUMsRUFBK0I7QUFDckQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUT0RPKEJhYmVsIDgpOiBSZW1vdmUgdGhpcyBmaWxlLlxuXG52YXIgcnVudGltZSA9IHJlcXVpcmUoXCIuLi9oZWxwZXJzL3JlZ2VuZXJhdG9yUnVudGltZVwiKSgpO1xubW9kdWxlLmV4cG9ydHMgPSBydW50aW1lO1xuXG4vLyBDb3BpZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVnZW5lcmF0b3IvYmxvYi9tYWluL3BhY2thZ2VzL3J1bnRpbWUvcnVudGltZS5qcyNMNzM2PVxudHJ5IHtcbiAgcmVnZW5lcmF0b3JSdW50aW1lID0gcnVudGltZTtcbn0gY2F0Y2ggKGFjY2lkZW50YWxTdHJpY3RNb2RlKSB7XG4gIGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gXCJvYmplY3RcIikge1xuICAgIGdsb2JhbFRoaXMucmVnZW5lcmF0b3JSdW50aW1lID0gcnVudGltZTtcbiAgfSBlbHNlIHtcbiAgICBGdW5jdGlvbihcInJcIiwgXCJyZWdlbmVyYXRvclJ1bnRpbWUgPSByXCIpKHJ1bnRpbWUpO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n')},2:function(module,exports){eval('function asyncGeneratorStep(n, t, e, r, o, a, c) {\n  try {\n    var i = n[a](c),\n      u = i.value;\n  } catch (n) {\n    return void e(n);\n  }\n  i.done ? t(u) : Promise.resolve(u).then(r, o);\n}\nfunction _asyncToGenerator(n) {\n  return function () {\n    var t = this,\n      e = arguments;\n    return new Promise(function (r, o) {\n      var a = n.apply(t, e);\n      function _next(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, "next", n);\n      }\n      function _throw(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, "throw", n);\n      }\n      _next(void 0);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports["default"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3luY1RvR2VuZXJhdG9yLmpzP2M5NzMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EiLCJmaWxlIjoiMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yU3RlcChuLCB0LCBlLCByLCBvLCBhLCBjKSB7XG4gIHRyeSB7XG4gICAgdmFyIGkgPSBuW2FdKGMpLFxuICAgICAgdSA9IGkudmFsdWU7XG4gIH0gY2F0Y2ggKG4pIHtcbiAgICByZXR1cm4gdm9pZCBlKG4pO1xuICB9XG4gIGkuZG9uZSA/IHQodSkgOiBQcm9taXNlLnJlc29sdmUodSkudGhlbihyLCBvKTtcbn1cbmZ1bmN0aW9uIF9hc3luY1RvR2VuZXJhdG9yKG4pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgdCA9IHRoaXMsXG4gICAgICBlID0gYXJndW1lbnRzO1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAociwgbykge1xuICAgICAgdmFyIGEgPSBuLmFwcGx5KHQsIGUpO1xuICAgICAgZnVuY3Rpb24gX25leHQobikge1xuICAgICAgICBhc3luY0dlbmVyYXRvclN0ZXAoYSwgciwgbywgX25leHQsIF90aHJvdywgXCJuZXh0XCIsIG4pO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gX3Rocm93KG4pIHtcbiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGEsIHIsIG8sIF9uZXh0LCBfdGhyb3csIFwidGhyb3dcIiwgbik7XG4gICAgICB9XG4gICAgICBfbmV4dCh2b2lkIDApO1xuICAgIH0pO1xuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBfYXN5bmNUb0dlbmVyYXRvciwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2\n')},37:function(module,exports,__webpack_require__){eval('var _typeof = __webpack_require__(6)["default"];\nfunction _regeneratorRuntime() {\n  "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  }, module.exports.__esModule = true, module.exports["default"] = module.exports;\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = "function" == typeof Symbol ? Symbol : {},\n    a = i.iterator || "@@iterator",\n    c = i.asyncIterator || "@@asyncIterator",\n    u = i.toStringTag || "@@toStringTag";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, "");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, "_invoke", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: "normal",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: "throw",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = "suspendedStart",\n    l = "suspendedYield",\n    f = "executing",\n    s = "completed",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    ["next", "throw", "return"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if ("throw" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) {\n          invoke("next", t, i, a);\n        }, function (t) {\n          invoke("throw", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke("throw", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, "_invoke", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw Error("Generator is already running");\n      if (o === s) {\n        if ("throw" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else "return" === n.method && n.abrupt("return", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if ("normal" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a \'" + n + "\' method")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = "normal", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: "root"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || "" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if ("function" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + " is not iterable");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, "constructor", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) {\n    var e = "function" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () {\n    return this;\n  }), define(g, "toString", function () {\n    return "[object Generator]";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if ("throw" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if ("root" === i.tryLoc) return handle("end");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, "catchLoc"),\n            u = n.call(i, "finallyLoc");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw Error("try statement without catch or finally");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if ("throw" === t.type) throw t.arg;\n      return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    "catch": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if ("throw" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw Error("illegal catch attempt");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, "next" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports["default"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///37\n')},6:function(module,exports){eval('function _typeof(o) {\n  "@babel/helpers - typeof";\n\n  return module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;\n  }, module.exports.__esModule = true, module.exports["default"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90eXBlb2YuanM/NzAzNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQSIsImZpbGUiOiI2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX3R5cGVvZihvKSB7XG4gIFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjtcblxuICByZXR1cm4gbW9kdWxlLmV4cG9ydHMgPSBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG8pIHtcbiAgICByZXR1cm4gdHlwZW9mIG87XG4gIH0gOiBmdW5jdGlvbiAobykge1xuICAgIHJldHVybiBvICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG8uY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvO1xuICB9LCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHMsIF90eXBlb2Yobyk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IF90eXBlb2YsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///6\n')},658:function(module,exports){eval("var ListItem = function () {\n  var init = function init() {\n    lazyloadBind();\n    configureLink();\n  };\n  var lazyloadBind = function lazyloadBind() {\n    if (typeof lozad === \"function\") {\n      lozad('.hfLazyLoad', {\n        threshold: 0.1,\n        loaded: function loaded(el) {\n          $(el).removeClass('hfLazyLoad');\n        }\n      }).observe();\n    } else {\n      if (document.getElementById(\"sharedglobalheader\") != null) {\n        $(\"img.hfLazyLoad\").each(function () {\n          if ($(this).attr('data-loaded') != \"true\") {\n            $(this).attr('src', $(this).attr('data-src'));\n          }\n        });\n      }\n    }\n    $('.hamburger-box').click(function (e) {\n      e.preventDefault();\n      $(\"img.hfLazyLoad\").each(function () {\n        if ($(this).attr('data-loaded') != \"true\") {\n          $(this).attr('src', $(this).attr('data-src'));\n          $(this).attr('data-loaded', 'true');\n        }\n      });\n    });\n  };\n  var configureLink = function configureLink() {\n    $(\".feature-content\").each(function () {\n      var linkLabel = $(this).attr('data-ctalabel');\n      var link = $(this).attr('data-ctalink');\n      var linkTarget = $(this).attr('data-ctatarget');\n      if ($(window).width() > 767) {\n        if (linkLabel && link) {\n          $(this).find(\".list__cta\").click(function (evt) {\n            evt.preventDefault();\n            evt.stopPropagation();\n            window.open(link, linkTarget);\n          });\n        } else if (!linkLabel && link) {\n          var $title = $(this).find('.header');\n          $title.addClass('addHoverEffect');\n          $title.click(function () {\n            window.open(link, linkTarget);\n          });\n        }\n      }\n    });\n  };\n  return {\n    init: init\n  };\n}();\n$(function () {\n  ListItem.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi93ZWJwYWNrL2NvbXBvbmVudHMvbGlzdC1pdGVtL3YyL2xpc3QtaXRlbS5qcz8yZGRiIl0sIm5hbWVzIjpbIkxpc3RJdGVtIiwiaW5pdCIsImxhenlsb2FkQmluZCIsImNvbmZpZ3VyZUxpbmsiLCJsb3phZCIsInRocmVzaG9sZCIsImxvYWRlZCIsImVsIiwiJCIsInJlbW92ZUNsYXNzIiwib2JzZXJ2ZSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJlYWNoIiwiYXR0ciIsImNsaWNrIiwiZSIsInByZXZlbnREZWZhdWx0IiwibGlua0xhYmVsIiwibGluayIsImxpbmtUYXJnZXQiLCJ3aW5kb3ciLCJ3aWR0aCIsImZpbmQiLCJldnQiLCJzdG9wUHJvcGFnYXRpb24iLCJvcGVuIiwiJHRpdGxlIiwiYWRkQ2xhc3MiXSwibWFwcGluZ3MiOiJBQUFBLElBQU1BLFFBQVEsR0FBSSxZQUFNO0VBQ3BCLElBQU1DLElBQUksR0FBSSxTQUFSQSxJQUFJQSxDQUFBLEVBQVU7SUFDaEJDLFlBQVksQ0FBQyxDQUFDO0lBQ2RDLGFBQWEsQ0FBQyxDQUFDO0VBQ25CLENBQUU7RUFDRixJQUFNRCxZQUFZLEdBQUksU0FBaEJBLFlBQVlBLENBQUEsRUFBVTtJQUN4QixJQUFJLE9BQU9FLEtBQUssS0FBSyxVQUFVLEVBQUM7TUFDNUJBLEtBQUssQ0FBQyxhQUFhLEVBQUU7UUFDakJDLFNBQVMsRUFBRSxHQUFHO1FBQ2RDLE1BQU0sRUFBRSxTQUFSQSxNQUFNQSxDQUFXQyxFQUFFLEVBQ25CO1VBQUVDLENBQUMsQ0FBQ0QsRUFBRSxDQUFDLENBQUNFLFdBQVcsQ0FBQyxZQUFZLENBQUM7UUFBRTtNQUN2QyxDQUFDLENBQUMsQ0FBQ0MsT0FBTyxDQUFDLENBQUM7SUFDaEIsQ0FBQyxNQUFJO01BQ0QsSUFBR0MsUUFBUSxDQUFDQyxjQUFjLENBQUMsb0JBQW9CLENBQUMsSUFBRSxJQUFJLEVBQUM7UUFDbkRKLENBQUMsQ0FBRSxnQkFBaUIsQ0FBQyxDQUFDSyxJQUFJLENBQUMsWUFBVztVQUNsQyxJQUFHTCxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUNNLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBRSxNQUFNLEVBQUM7WUFDckNOLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQ00sSUFBSSxDQUFDLEtBQUssRUFBQ04sQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDTSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7VUFDOUM7UUFDSixDQUFDLENBQUM7TUFDTjtJQUNKO0lBQ0FOLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDTyxLQUFLLENBQUMsVUFBU0MsQ0FBQyxFQUFDO01BQ2pDQSxDQUFDLENBQUNDLGNBQWMsQ0FBQyxDQUFDO01BQ2xCVCxDQUFDLENBQUUsZ0JBQWlCLENBQUMsQ0FBQ0ssSUFBSSxDQUFDLFlBQVc7UUFDcEMsSUFBR0wsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDTSxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUUsTUFBTSxFQUFDO1VBQ3JDTixDQUFDLENBQUMsSUFBSSxDQUFDLENBQUNNLElBQUksQ0FBQyxLQUFLLEVBQUNOLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQ00sSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1VBQzVDTixDQUFDLENBQUMsSUFBSSxDQUFDLENBQUNNLElBQUksQ0FBQyxhQUFhLEVBQUMsTUFBTSxDQUFDO1FBQ3BDO01BQ0YsQ0FBQyxDQUFDO0lBQ04sQ0FBQyxDQUFDO0VBQ04sQ0FBRTtFQUNGLElBQU1YLGFBQWEsR0FBRyxTQUFoQkEsYUFBYUEsQ0FBQSxFQUFTO0lBQ3hCSyxDQUFDLENBQUMsa0JBQWtCLENBQUMsQ0FBQ0ssSUFBSSxDQUFDLFlBQVc7TUFDbEMsSUFBSUssU0FBUyxHQUFHVixDQUFDLENBQUMsSUFBSSxDQUFDLENBQUNNLElBQUksQ0FBQyxlQUFlLENBQUM7TUFDN0MsSUFBSUssSUFBSSxHQUFHWCxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUNNLElBQUksQ0FBQyxjQUFjLENBQUM7TUFDdkMsSUFBSU0sVUFBVSxHQUFHWixDQUFDLENBQUMsSUFBSSxDQUFDLENBQUNNLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQztNQUMvQyxJQUFHTixDQUFDLENBQUNhLE1BQU0sQ0FBQyxDQUFDQyxLQUFLLENBQUMsQ0FBQyxHQUFHLEdBQUcsRUFBRTtRQUN4QixJQUFHSixTQUFTLElBQUlDLElBQUksRUFBRTtVQUNsQlgsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDZSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUNSLEtBQUssQ0FBRSxVQUFBUyxHQUFHLEVBQUk7WUFDckNBLEdBQUcsQ0FBQ1AsY0FBYyxDQUFDLENBQUM7WUFDcEJPLEdBQUcsQ0FBQ0MsZUFBZSxDQUFDLENBQUM7WUFDckJKLE1BQU0sQ0FBQ0ssSUFBSSxDQUFDUCxJQUFJLEVBQUVDLFVBQVUsQ0FBQztVQUNqQyxDQUFDLENBQUM7UUFDTixDQUFDLE1BQU0sSUFBRyxDQUFDRixTQUFTLElBQUlDLElBQUksRUFBRTtVQUMzQixJQUFNUSxNQUFNLEdBQUduQixDQUFDLENBQUMsSUFBSSxDQUFDLENBQUNlLElBQUksQ0FBQyxTQUFTLENBQUM7VUFDdENJLE1BQU0sQ0FBQ0MsUUFBUSxDQUFDLGdCQUFnQixDQUFDO1VBQ2pDRCxNQUFNLENBQUNaLEtBQUssQ0FBQyxZQUFNO1lBQ2ZNLE1BQU0sQ0FBQ0ssSUFBSSxDQUFDUCxJQUFJLEVBQUVDLFVBQVUsQ0FBQztVQUNqQyxDQUFDLENBQUM7UUFDTDtNQUNKO0lBQ0osQ0FBQyxDQUFDO0VBQ04sQ0FBQztFQUNELE9BQU87SUFDSG5CLElBQUksRUFBSkE7RUFDSixDQUFDO0FBQ0wsQ0FBQyxDQUFFLENBQUM7QUFFSk8sQ0FBQyxDQUFDLFlBQU07RUFDSlIsUUFBUSxDQUFDQyxJQUFJLENBQUMsQ0FBQztBQUNuQixDQUFDLENBQUMiLCJmaWxlIjoiNjU4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgTGlzdEl0ZW0gPSAoKCkgPT4ge1xuICAgIGNvbnN0IGluaXQgPSAoKCkgPT4ge1xuICAgICAgICBsYXp5bG9hZEJpbmQoKTtcbiAgICAgICAgY29uZmlndXJlTGluaygpO1xuICAgIH0pO1xuICAgIGNvbnN0IGxhenlsb2FkQmluZCA9ICgoKSA9PiB7XG4gICAgICAgIGlmICh0eXBlb2YgbG96YWQgPT09IFwiZnVuY3Rpb25cIil7XG4gICAgICAgICAgICBsb3phZCgnLmhmTGF6eUxvYWQnLCB7XG4gICAgICAgICAgICAgICAgdGhyZXNob2xkOiAwLjEsXG4gICAgICAgICAgICAgICAgbG9hZGVkOiBmdW5jdGlvbihlbClcbiAgICAgICAgICAgICAgICB7ICQoZWwpLnJlbW92ZUNsYXNzKCdoZkxhenlMb2FkJyk7IH1cbiAgICAgICAgICAgIH0pLm9ic2VydmUoKTtcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICBpZihkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNoYXJlZGdsb2JhbGhlYWRlclwiKSE9bnVsbCl7XG4gICAgICAgICAgICAgICAgJCggXCJpbWcuaGZMYXp5TG9hZFwiICkuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYoJCh0aGlzKS5hdHRyKCdkYXRhLWxvYWRlZCcpIT1cInRydWVcIil7XG4gICAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5hdHRyKCdzcmMnLCQodGhpcykuYXR0cignZGF0YS1zcmMnKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAkKCcuaGFtYnVyZ2VyLWJveCcpLmNsaWNrKGZ1bmN0aW9uKGUpe1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgJCggXCJpbWcuaGZMYXp5TG9hZFwiICkuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgaWYoJCh0aGlzKS5hdHRyKCdkYXRhLWxvYWRlZCcpIT1cInRydWVcIil7XG4gICAgICAgICAgICAgICAgJCh0aGlzKS5hdHRyKCdzcmMnLCQodGhpcykuYXR0cignZGF0YS1zcmMnKSk7XG4gICAgICAgICAgICAgICAgJCh0aGlzKS5hdHRyKCdkYXRhLWxvYWRlZCcsJ3RydWUnKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pXG4gICAgfSk7XG4gICAgY29uc3QgY29uZmlndXJlTGluayA9ICgpID0+IHtcbiAgICAgICAgJChcIi5mZWF0dXJlLWNvbnRlbnRcIikuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGxldCBsaW5rTGFiZWwgPSAkKHRoaXMpLmF0dHIoJ2RhdGEtY3RhbGFiZWwnKTtcbiAgICAgICAgICAgIGxldCBsaW5rID0gJCh0aGlzKS5hdHRyKCdkYXRhLWN0YWxpbmsnKTtcbiAgICAgICAgICAgIGxldCBsaW5rVGFyZ2V0ID0gJCh0aGlzKS5hdHRyKCdkYXRhLWN0YXRhcmdldCcpO1xuICAgICAgICAgICAgaWYoJCh3aW5kb3cpLndpZHRoKCkgPiA3NjcpIHtcbiAgICAgICAgICAgICAgICBpZihsaW5rTGFiZWwgJiYgbGluaykge1xuICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmZpbmQoXCIubGlzdF9fY3RhXCIpLmNsaWNrKCBldnQgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBldnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cub3BlbihsaW5rLCBsaW5rVGFyZ2V0KVxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZighbGlua0xhYmVsICYmIGxpbmspIHtcbiAgICAgICAgICAgICAgICAgICBjb25zdCAkdGl0bGUgPSAkKHRoaXMpLmZpbmQoJy5oZWFkZXInKTtcbiAgICAgICAgICAgICAgICAgICAkdGl0bGUuYWRkQ2xhc3MoJ2FkZEhvdmVyRWZmZWN0Jyk7XG4gICAgICAgICAgICAgICAgICAgJHRpdGxlLmNsaWNrKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgd2luZG93Lm9wZW4obGluaywgbGlua1RhcmdldCk7XG4gICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfSAgIFxuICAgIHJldHVybiB7XG4gICAgICAgIGluaXRcbiAgICB9O1xufSkoKTtcblxuJCgoKSA9PiB7XG4gICAgTGlzdEl0ZW0uaW5pdCgpO1xufSk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///658\n")},838:function(module,exports){eval("// TODO move to utils\n/**\n * method to get query parameter by name from passed page url\n * @param {string} name\n * @param {string} url\n */\nvar getParameterByName = function getParameterByName(name, url) {\n  if (!url) url = window.location.href;\n  name = name.replace(/[[\\]]/g, '\\\\$&');\n  var regex = new RegExp(\"[?&]\".concat(name, \"(=([^&#]*)|&|#|$)\"));\n  var results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n};\n\n// TODO move to utils\n/**\n * Method to update target query parameter\n * @param {string} uri\n * @param {string} key\n * @param {string} value\n */\nvar updateQueryStringParameter = function updateQueryStringParameter(uri, key, value) {\n  var regex = new RegExp(\"([?&])\".concat(key, \"=.*?(&|$)\"), 'i');\n  var separator = uri.indexOf('?') !== -1 ? \"&\" : \"?\";\n  if (uri.match(regex)) {\n    return uri.replace(regex, \"$1\".concat(key, \"=\").concat(value, \"$2\"));\n  } else {\n    return uri + separator + key + \"=\" + value;\n  }\n};\nwindow.clearSessionStorage = function () {\n  var i = sessionStorage.length;\n  while (i--) {\n    var key = sessionStorage.key(i);\n    if (key.match(/-notification-sent/g)) {\n      sessionStorage.removeItem(key);\n    }\n  }\n};\nwindow.deleteCookies = function (dest) {\n  //Setting all cookies to expire immediately\n  sessionStorage.setItem('SPLUNK_USER_LOGIN_STATUS', 'false');\n  sessionStorage.setItem('SPLUNK_USER_BETA_STATUS', '');\n  sessionStorage.removeItem('SPLUNK_USER_GUID');\n  sessionStorage.removeItem('SPLUNK_USER_EMAIL');\n  sessionStorage.removeItem('SPLUNK_USER_NAME');\n  sessionStorage.removeItem('SPLUNK_USER_DATE_REGISTERED');\n  sessionStorage.removeItem('SPLUNK_USER_SALESFORCEID');\n  sessionStorage.removeItem('SPLUNK_USER_STATE');\n  sessionStorage.removeItem('SPLUNK_USER_UNAME');\n  sessionStorage.removeItem('SPLUNK_USER_VALIDATED_EMAIL');\n  sessionStorage.removeItem('SPLUNK_USER_PARENTS');\n  sessionStorage.removeItem('SPLUNK_USER_UID');\n  sessionStorage.removeItem('SPLUNK_USER_LAST_SEEN');\n  if (dest !== null) {\n    var hasReturnTo = dest.indexOf('return_to') !== -1;\n    var hasQueryParam = dest.indexOf('?') !== -1;\n    var returnToUrl = $(location).attr('href').split('?')[0];\n    if (!hasReturnTo) {\n      if (!hasQueryParam) {\n        dest += \"?return_to=\".concat(returnToUrl);\n      } else {\n        dest += \"&return_to=\".concat(returnToUrl);\n      }\n    } else {\n      if (getParameterByName('return_to', dest) !== returnToUrl) {\n        dest = updateQueryStringParameter(dest, 'return_to', returnToUrl);\n      }\n    }\n    window.location.href = dest;\n  }\n};\nvar GlobalHeader = function () {\n  var userLoggedIn = null;\n  var signUpIframeRendered = false;\n  var globalHeader;\n\n  /*eslint-disable no-global-assign*/\n  if (!window.signupXcomponent && window.location.href.indexOf('localhost') !== -1) {\n    console.warn('signupXcomponent not available');\n    window.signupXcomponent = {\n      render: function render(obj) {\n        console.log(obj);\n      }\n    };\n  }\n  /*eslint-enable no-global-assign*/\n\n  var rootElement = document.querySelector('html');\n  var init = function init() {\n    checkUserSession();\n    bindUserSessionCheckOnFreeSplunk();\n    addReferrerIdToLoginSignup();\n    //bindCloseButton();\n    // initHamburgerAnimation();\n    bindFocus();\n    globalNavAccessibility();\n    bindLanguageSpecificElement();\n    bindMobileSearchEvent();\n    checkFreeSplunk();\n    checkOffsetLeft();\n    var windowWidth = $(window).width();\n    $(window).resize(function () {\n      if ($(window).width() != windowWidth) {\n        windowWidth = $(window).width();\n      }\n    });\n    $('li.search-nav-item-bs4 .search-icon').on('click', function () {\n      $('#searchForm input').focus();\n      setTimeout(function () {\n        $('.search-container input').focus();\n      }, \"0\");\n    });\n    $('.checkLogin').on('click', function () {\n      var url = $(this).attr('href');\n      if (url === 'undefined') {\n        url = $(event.target).attr('href');\n      }\n      window.location.href = url;\n    });\n  };\n  var checkFreeSplunk = function checkFreeSplunk() {\n    if (!$(\".free-splunk\")[0]) {\n      $('ul#account').addClass('no-free-splunk');\n      $('a#Top_Nav-Languages').next().addClass('no-free-splunk');\n      $('.search-container').addClass('no-free-splunk');\n    }\n  };\n  var bindMobileSearchEvent = function bindMobileSearchEvent() {\n    $('.bottom-links .search-icon-container').click(function () {\n      $('.bottom-links .search-icon-container').addClass('open');\n      var $input = $(this).find('input');\n      $input.trigger('focus');\n      $input.focusout(function () {\n        $('.bottom-links .search-icon-container').removeClass('open');\n      });\n    });\n  };\n  /**\n   * Method to make sure that free splunk form is only generated when user interacts with it\n   */\n  var bindUserSessionCheckOnFreeSplunk = function bindUserSessionCheckOnFreeSplunk() {\n    $('#free-splunk-click-desktop, #free-splunk-click-mobile').on('click', function (evt) {\n      if ($(event.target).hasClass('noiframe')) {\n        window.location.assign($(event.target).attr('href'));\n        return false;\n      }\n      if (document.cookie.indexOf('WEBID=') === -1) {\n        evt.preventDefault();\n      }\n      console.log(signUpIframeRendered);\n      // turn off current click handler\n      //$('#free-splunk-click-desktop, #free-splunk-click-mobile').off('click');\n      // $currentTarget = $(evt.currentTarget);\n      // const href = $currentTarget.attr('href');\n      if (userLoggedIn === false) {\n        if (isScriptLoaded($('#freeSplunkSrc').attr('data-src-freesplunk-1'))) {\n          loadExLaneForm();\n        } else {\n          downloadJSAtOnload();\n          _checkSignUpReady();\n        }\n        //evt.preventDefault();\n        //evt.stopPropagation();\n        // bindings not completed user session not checked\n      } else if (userLoggedIn === null) {\n        console.warn('Session check pending');\n        evt.preventDefault();\n        evt.stopPropagation();\n      }\n    });\n  };\n  var _checkSignUpReady = function checkSignUpReady() {\n    if (typeof signupXcomponent !== 'undefined') {\n      loadExLaneForm();\n    } else {\n      window.setTimeout(_checkSignUpReady, 200);\n    }\n  };\n  var isScriptLoaded = function isScriptLoaded(src) {\n    return document.querySelector('script[src=\"' + src + '\"]') ? true : false;\n  };\n  function downloadJSAtOnload() {\n    var element1 = document.createElement(\"script\");\n    var element2 = document.createElement(\"script\");\n    element1.src = $('#freeSplunkSrc').attr('data-src-freesplunk-1');\n    element2.src = $('#freeSplunkSrc').attr('data-src-freesplunk-2');\n    element1.onload = function () {\n      document.body.appendChild(element2);\n    };\n    document.body.appendChild(element1);\n  }\n\n  /**\n   * method to generate and load Free Splunk form\n   */\n  var loadExLaneForm = function loadExLaneForm() {\n    var isMobile = false;\n    if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|BB|PlayBook|IEMobile|Windows Phone|Kindle|Silk|Opera Mini/i.test(navigator.userAgent)) {\n      isMobile = true;\n    }\n    var md = new MobileDetect(window.navigator.userAgent);\n    var dimensions = md.getOverlaySignupIframeSize();\n    var redirectUrl = $('#free-splunk-click-desktop').attr('href');\n\n    /**\n     * sign or login issue WWW-14617 & WWW-14729\n     */\n    var lang = '';\n    var pageLocale = document.getElementsByTagName('body')[0].getAttribute('lang');\n    // if the lang attribute is null\n    if (!pageLocale) {\n      lang = 'en_us';\n    } else {\n      // if the lang attribute is not null\n      if (pageLocale == \"zh-Hans\") {\n        pageLocale = \"zh-hans_cn\";\n      } else {\n        pageLocale = pageLocale.replaceAll(\"-\", \"_\").toLowerCase().trim();\n      }\n      lang = pageLocale;\n      if (lang.length === 0 || lang == \"ko_kr\" || lang == \"zh_tw\" || lang == \"zh\" || lang == \"en\") {\n        lang = 'en_us';\n      }\n    }\n    $('#free-splunk-click-mobile').addClass('express-lane-open');\n    $('#free-splunk-click-desktop').addClass('express-lane-open');\n    $('#iframe-modal').click(function () {\n      if ($('.overlay-form-modal').hasClass('show')) {\n        $('.overlay-form-modal').removeClass('show').fadeOut();\n        $('.modal-backdrop').hide();\n        $('.overlay-form').animate({\n          'margin-right': '-' + $('.overlay-form').width() + 'px'\n        });\n        $('body').removeClass('modal-open');\n      } else {\n        $('.overlay-form-modal').addClass('show');\n      }\n    });\n    /**\n     * sign up form - express flow.\n     */\n    if (!signUpIframeRendered) {\n      signupXcomponent.render({\n        dimensions: {\n          width: dimensions.width,\n          height: dimensions.height\n        },\n        theme: 'light',\n        locale: lang,\n        redirectUrl: redirectUrl,\n        isMobile: isMobile,\n        isQuickAccess: true,\n        isRecaptcha: false,\n        customProps: {\n          leadSource: 'splunk',\n          form_id: \"Overlay-form\"\n        },\n        onSignup: function onSignup(data) {\n          try {\n            if (data.status == 'close') {\n              $('html').removeClass('iphone-fix');\n              $('body').removeClass('iphone-fix');\n            }\n          } catch (e) {\n            //do nothing\n            console.log('no status to close');\n          }\n          nextAction(data);\n        },\n        isCloseButtonOn: true,\n        title: 'Get Started With Splunk',\n        id: 'header-signup-xcomp'\n      }, '#header-signup-xcomp');\n      signUpIframeRendered = true;\n    }\n    $('.express-lane-open').click(function (e) {\n      if ($(e.target).hasClass('express-lane-open')) {\n        e.preventDefault();\n        $('#header-signup-xcomp').animate({\n          'margin-right': '0px'\n        });\n        $('.modal-backdrop').show();\n        $('.overlay-form-modal').fadeIn().addClass('show');\n      }\n    });\n    bindWindowMessageListener();\n\n    // since we're loading component on button click, user has\n    // already clicked on free splunk button. Open Modal and show\n    // required form.\n    setTimeout(function () {\n      if (!userLoggedIn) {\n        $('#iframe-modal').modal('show');\n        $('html').addClass('stop-scrolling');\n        $('#header-signup-xcomp').animate({\n          'margin-right': '0px'\n        });\n      }\n    }, 0);\n  };\n\n  /**\n   * Method to bind window message lister for Free Splunk Form\n   */\n  var bindWindowMessageListener = function bindWindowMessageListener() {\n    // Listener event to handle click event from iframe or child window\n    var eventMethod = window.addEventListener ? 'addEventListener' : 'attachEvent';\n    var eventer = window[eventMethod];\n    var messageEvent = eventMethod == 'attachEvent' ? 'onmessage' : 'message';\n\n    // Listen to message from child window\n    eventer(messageEvent, function (e) {\n      var key = e.message ? 'message' : 'data';\n      var data = e[key];\n      //run function//\n      if (data == 'hide-signup-form') {\n        $('#iframe-modal').modal('hide');\n        $('#iframe-modal').fadeOut();\n        $('.modal-backdrop').fadeOut();\n        $('html').removeClass('iphone-fix stop-scrolling');\n        $('body').removeClass('iphone-fix');\n        $('body').removeClass('modal-open');\n        $('.overlay-form').animate({\n          'margin-right': '-' + $('.overlay-form').width() + 'px'\n        });\n      }\n    }, false);\n    $('#free-splunk-click-desktop').click(function () {\n      $('html').addClass('stop-scrolling');\n    });\n  };\n\n  /**\n   * Method to add redirectUrl to sign up and login links.\n   */\n  var addReferrerIdToLoginSignup = function addReferrerIdToLoginSignup() {\n    var loginRedirectUrl = $('#loginId').attr('href');\n    var locationHref = $(location).attr('href').split('?')[0];\n    if (!loginRedirectUrl || loginRedirectUrl.indexOf('redirecturl') !== -1) {\n      console.warn('incorrect login link');\n    }\n    loginRedirectUrl = \"\".concat(loginRedirectUrl, \"&redirecturl=\").concat(locationHref);\n    $('[id=loginId]').attr('href', loginRedirectUrl);\n    var signUpRedirectUrl = $('#signId').attr('href');\n    signUpRedirectUrl = \"\".concat(signUpRedirectUrl, \"?redirecturl=\").concat(locationHref);\n    $('[id=signId]').attr('href', signUpRedirectUrl);\n  };\n\n  /**\n   * Method to check if user session is available and initialize free splunk form\n   * if valid session is not available\n   */\n  var checkUserSession = function checkUserSession() {\n    var ssoid = Cookies.get('WEBID');\n    if (ssoid) {\n      if ($('.checkLogin').length > 0) {\n        $('.checkLogin').removeAttr(\"data-modal-title  data-modal-content-url data-toggle\").attr(\"target\", \"\").attr(\"data-target\", \"#\");\n      }\n      var user_info_endpoint = '';\n      /* eslint-disable no-undef*/\n      if (typeof siteConfig.user_info_endpoint !== 'undefined') {\n        user_info_endpoint = siteConfig.user_info_endpoint;\n      } else {\n        user_info_endpoint = \"/api/bin/user/info\";\n      }\n      /* eslint-disable no-undef*/\n      $.ajax({\n        cache: false,\n        url: user_info_endpoint,\n        dataType: 'json',\n        success: function success(userinfo) {\n          if (!userinfo.login_status) {\n            if (document.getElementById(\"sharedglobalheader\") === null) {\n              $('.loggedin-user-link').remove();\n            } else {\n              $('.loggedin-user-link').hide();\n            }\n            $('.has-product-links').removeClass('logged-in');\n            userLoggedIn = false;\n          } else {\n            userLoggedIn = true;\n            setCookies(userinfo);\n            $('.loggedout-user-link').remove();\n            $('.loggedin-user-link').removeClass('hidden');\n            $('.has-product-links').addClass('logged-in');\n            var userName = '';\n            if (userinfo.firstname) {\n              userName = userinfo.firstname;\n            }\n            if (getUserRegion() == \"APAC\" && userinfo.lastname) {\n              userName = userinfo.lastname;\n            }\n            $('#loggedinusername').html(\"\".concat(userName));\n            $('#loggedinusernamemobile').html(\"\".concat(userName));\n            $('#mobile-account').find('#mydashboard').html(\"\".concat(userName));\n            $('#free-splunk-click-desktop').attr('data-target', '');\n            $('#free-splunk-click-mobile').attr('data-target', '');\n            $('#free-splunk-click-desktop').attr('data-toggle', '');\n            $('#free-splunk-click-mobile').attr('data-toggle', '');\n            $('.splunk-icon.icon-expanded-user-icon').hide();\n            createUserAvatar(userName);\n          }\n        },\n        failure: function failure() {\n          userLoggedIn = false;\n        }\n      });\n    } else {\n      if ($('.checkLogin').length > 0) {\n        $('.checkLogin').removeClass('checkLogin');\n      }\n      if (document.getElementById(\"sharedglobalheader\") === null) {\n        $('.loggedin-user-link').remove();\n      } else {\n        $('.loggedin-user-link').hide();\n      }\n      $('.loggedout-user-link').removeClass('loggedout-user-link');\n      $('.splunk-icon.icon-expanded-user-icon').show();\n      $('.splunk-user-avatar').addClass('hidden');\n      userLoggedIn = false;\n    }\n  };\n\n  /**\n   *\n   * Set Cookie Code (Not polluting Global namespace as it has to be only used whe usr logsin)\n   */\n  function setCookies(userinfo) {\n    if (userinfo.login_status) {\n      sessionStorage.setItem('SPLUNK_USER_LOGIN_STATUS', userinfo.login_status);\n      sessionStorage.setItem('SPLUNK_USER_BETA_STATUS', userinfo.beta_status);\n      Cookies.raw = true;\n      Cookies.set(\"_st\", userinfo.ga_id, {\n        expires: 1825,\n        path: \"/\",\n        domain: \"splunk.com\"\n      });\n    }\n  }\n  /**\n   * Function to create userAvatar from userName\n   */\n  var createUserAvatar = function createUserAvatar(userName) {\n    var userNameInitial = userName[0];\n    var mobileLoggedInAvatarWrapper = document.querySelector('.splunk-header-v2-mobile #loggedInUserWrapper');\n    var mobileLoggedOutAvatarWrapper = document.querySelector('.splunk-header-v2-mobile #loggedOutUserWrapper');\n    if (mobileLoggedInAvatarWrapper !== null && mobileLoggedOutAvatarWrapper !== null) {\n      mobileLoggedOutAvatarWrapper.classList.add('hidden');\n      mobileLoggedInAvatarWrapper.classList.remove('hidden');\n    }\n    $('.splunk-user-avatar').removeClass('hidden').find('.loginUserNameIcon').html(userNameInitial);\n  };\n  var bindLanguageSpecificElement = function bindLanguageSpecificElement() {\n    if ($('.locale_ja_jp').length > 0) {\n      $('.search-help-text').removeClass('sr-only');\n      $('.searchText').addClass('sr-only');\n    } else {\n      $('.search-help-text').addClass('sr-only');\n      $('.searchText').removeClass('sr-only');\n    }\n  };\n  var getUserRegion = function getUserRegion() {\n    var userRegion = '';\n    if ($('.region_APAC').length > 0) {\n      userRegion = \"APAC\";\n    } else if ($('.region_EMEA').length > 0) {\n      userRegion = \"EMEA\";\n    } else {\n      userRegion = \"US\";\n    }\n    return userRegion;\n  };\n  var bindFocus = function bindFocus() {\n    $(\".focus-enabled\").each(function () {\n      if ($(window).width() < 768) {\n        $(this).click(function () {\n          $(this).hasClass('open') ? $(this).removeClass('open') : $(this).addClass('open');\n          $(this).hasClass('open') ? $('.splunk-icon').removeClass('active') : $('.splunk-icon').addClass('active');\n        });\n      } else {\n        if ($(this).hasClass('search-nav-item-bs4') == 0) {\n          $(this).mouseover(function () {\n            $(this).addClass('open');\n            $('.splunk-icon').addClass('active');\n            $('.feature-content').each(function () {\n              if ($(this).children().length == 0) {\n                $(this).hide();\n              }\n            });\n          });\n          $(this).mouseleave(function () {\n            $(this).removeClass('open');\n            $('.splunk-icon').removeClass('active');\n          });\n        } else {\n          $('.search-nav-item-bs4').click(function (e) {\n            if ($(e.target).hasClass('icon-expanded-search-icon')) {\n              $(this).hasClass('open') ? $(this).removeClass('open') : $(this).addClass('open');\n              $(this).hasClass('open') ? $('.splunk-icon').addClass('active') : $('.splunk-icon').removeClass('active');\n            }\n          });\n        }\n      }\n    });\n  };\n  $('.nav-item-component').hover(function () {\n    $('.search-nav-item-bs4').removeClass('open');\n  });\n  $('.nav-item').hover(function () {\n    if (!$(this).hasClass(\"search-nav-item-bs4\")) {\n      $('.search-nav-item-bs4').removeClass('open');\n    }\n  });\n  $(document).on(\"click\", function (e) {\n    if ($(e.target).is(\".icon-expanded-search-icon\") === false) {\n      $(\".search-nav-item-bs4\").removeClass(\"open\");\n    }\n  });\n  var globalNavAccessibility = function globalNavAccessibility() {\n    var productsTab = $('.navbar-left li:nth-child(1) .ga-cta');\n    var solutionsTab = $('.navbar-left li:nth-child(2) .subnav__right .subnav__right-item-list:last-child() a.ga-cta');\n    var whySplunkTab = $('.navbar-left li:nth-child(3) .subnav__right-item-list:last-child() .list-cta');\n    var resourcesTab = $('.navbar-left li:nth-child(4) .subnav__right-item-list:last-child() .list__items li:last-child() .list-cta');\n    var supportTab = $('.navItem-right ul li:last-child()');\n    $('.search-nav-item-bs4 a').attr('href', '#');\n    $('.nav-item-component.navItem-left').on('keydown', function (e) {\n      if (e.keyCode == 13) {\n        $(this).toggleClass('show');\n        $('.nav-item-component').not(this).removeClass('show');\n        $('.container-fluid.no-padding').addClass('offset__left');\n      } else if (e.keyCode == 9) {\n        var showClass = $('.navbar-nav').find('.show').length;\n        if (showClass == 0) {\n          e.preventDefault();\n          $(this).next().find('.navItem a').focus();\n          $('.nav-item-component').not(this).removeClass('show');\n          var nextElement = $(this).next().length;\n          if (nextElement == 0) {\n            $('.navItem-right .navItem a').focus();\n            if (e.keyCode == 13) {\n              $('.navItem-right').toggleClass('show');\n            }\n          }\n        }\n      }\n    });\n    $('.nav-item-component.navItem-right').on('keydown', function (e) {\n      if (e.keyCode == 13) {\n        $('.container-fluid.no-padding').removeClass('offset__left');\n        $('.nav-item-component.navItem-left').removeClass('show');\n        $('.navItem-right').toggleClass('show');\n      } else if (e.keyCode == 9) {\n        var showClass = $('.navbar-nav').find('.show').length;\n        if (showClass == 0) {\n          e.preventDefault();\n          $(this).next().find('a').focus();\n        }\n      }\n    });\n    $(\".navbar-left li:nth-child(2)\").on('keydown', function (e) {\n      $('.items__columns').parents('.subnav__right-item-list').addClass('subnav__right-item-list-twoColumn');\n    });\n    $(\".navbar-right li:nth-child(3)\").on('keydown', function (e) {\n      if (e.keyCode == 13) {\n        $('.splunk-header-v2').find('li').removeClass('show');\n        $(this).toggleClass('open');\n      }\n    });\n    $(\".navbar-right li:nth-child(4)\").on('keydown', function (e) {\n      if (e.keyCode == 13) {\n        $('.splunk-header-v2').find('li').removeClass('show');\n        $(this).toggleClass('open');\n      }\n    });\n    $('.search-nav-item-bs4').on('keydown', function (e) {\n      if (e.keyCode == 13) {\n        $('.container-fluid.no-padding').removeClass('offset__left');\n        $('.splunk-header-v2').find('li').removeClass('show');\n        $(this).toggleClass('open');\n      }\n    });\n    $('.mm-input').on('keydown', function (e) {\n      if (e.keyCode == 27) {\n        $('.search-nav-item-bs4').removeClass('open');\n        $('.search-nav-item-bs4 a').focus();\n      }\n    });\n    $('.nav-item-component').on('keydown', function (e) {\n      if (e.shiftKey && e.keyCode == 9) {\n        e.preventDefault();\n        $(this).prev().find('.navItem a').focus();\n      }\n    });\n    $('.free-splunk a').on('keydown', function (e) {\n      if (e.keyCode == 13) {\n        $(this).click();\n      }\n    });\n    $(productsTab).on('keydown', function (e) {\n      if (e.keyCode == 9) {\n        $('.navbar-left li:nth-child(1)').removeClass('show');\n      }\n    });\n    $(solutionsTab).on('keydown', function (e) {\n      if (e.keyCode == 9) {\n        $('.navbar-left li:nth-child(2)').removeClass('show');\n      }\n    });\n    $(whySplunkTab).on('keydown', function (e) {\n      if (e.keyCode == 9) {\n        $('.navbar-left li:nth-child(3)').removeClass('show');\n      }\n    });\n    $(resourcesTab).on('keydown', function (e) {\n      if (e.keyCode == 9) {\n        $('.navbar-left li:nth-child(4)').removeClass('show');\n      }\n    });\n    $(supportTab).on('keydown', function (e) {\n      if (e.keyCode == 9) {\n        $('.navItem-right').removeClass('show');\n      }\n    });\n    $('.cm-dropdown li:last-child').on('keydown', function (e) {\n      if (e.keyCode == 9) {\n        $(\".navbar-right li:nth-child(3)\").removeClass('open');\n      }\n    });\n    if ($('.splunk-logo.logo-image.second').length) {\n      $('.nav-item-component.navItem-left').on('keydown', function (e) {\n        $('.container-fluid.no-padding').removeClass('offset__left');\n      });\n    }\n    $('.nav-item').on('keydown', function (e) {\n      if (e.shiftKey && e.keyCode == 9) {\n        e.preventDefault();\n        $(this).prev().find('a').focus();\n        if ($(this).prev('li').hasClass('navItem-right')) {\n          $('.navItem.flyout-navItem a').focus();\n        }\n      }\n    });\n    $('.navItem-right').on('keydown', function (e) {\n      if (e.shiftKey && e.keyCode == 9) {\n        e.preventDefault();\n        $('.navbar-left li:nth-child(4)').find('a.navItem-link').focus();\n      }\n    });\n    $('.navbar-left .nav-item-component').on('keydown', function (e) {\n      if (e.shiftKey && e.keyCode == 9) {\n        e.preventDefault();\n        if ($(this).prev().find('.navItem a').length <= 0) {\n          $('.navbar-brand.topnav').focus();\n        }\n        $(this).prev().find('.navItem a').focus();\n      }\n    });\n    $('#account li').on('keydown', function (e) {\n      if ($('#account').find('#logout').length == 0) {\n        if ($(this).find('#signId').length !== 0) {\n          if (e.keyCode == 9) {\n            $(\".navbar-right li:nth-child(4)\").removeClass('open');\n          }\n        }\n      }\n    });\n    $('#account li.loggedin-user-link').on('keydown', function (e) {\n      if ($(this).find('#logout').length !== 0) {\n        if (e.keyCode == 9) {\n          $(\".navbar-right li:nth-child(4)\").removeClass('open');\n        }\n      }\n    });\n  };\n  var checkOffsetLeft = function checkOffsetLeft() {\n    var navItemComponentList = document.querySelectorAll('.splunk-header-v2-desktop .navbar-nav .nav-item-component.mega-menu-nav');\n    if (navItemComponentList === null) throw new Error(\"Couldn't find the global nav items...\");\n    navItemComponentList.forEach(function (navItem) {\n      var getRightListItem = navItem.querySelectorAll('.subnav__right-item-list').length;\n      var getItemColumn = navItem.querySelectorAll('.items__columns').length;\n      var getLeftListItem = navItem.querySelector('.subnav__left-item-list');\n      var flyOutWrapperElement = navItem.querySelector('.flyoutWrapper');\n      if (getRightListItem > 1 && getItemColumn > 0) {\n        //$(this).parents('.navbar-collapse').addClass('offset__left');\n        flyOutWrapperElement.classList.add('centered-flyoutWrapper');\n      }\n      if (getRightListItem > 1) {\n        //$(this).parents('.navbar-collapse').addClass('offset__left');\n        flyOutWrapperElement.classList.add('centered-flyoutWrapper');\n      }\n    });\n  };\n  return {\n    init: init\n  };\n}();\n$(function () {\n  if ($('.global-header-v2-wrapper').length > 0) {\n    GlobalHeader.init();\n  }\n});\n\n//Adobe Target Prehiding ONly if the component is selected for personalization\n!function (e, a, n, t) {\n  if (a) return;\n  var i = e.head;\n  if (i) {\n    var o = e.createElement(\"style\");\n    o.id = \"alloy-prehiding\", o.innerText = n, i.appendChild(o), setTimeout(function () {\n      o.parentNode && o.parentNode.removeChild(o);\n    }, t);\n  }\n}(document, document.location.href.indexOf(\"adobe_authoring_enabled\") !== -1, \"[data-at-location] { opacity: 0 !important }\", 3000);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi93ZWJwYWNrL2NvbXBvbmVudHMvZ2xvYmFsLWhlYWRlci92My9nbG9iYWwtaGVhZGVyLmpzP2IzZTAiXSwibmFtZXMiOlsiZ2V0UGFyYW1ldGVyQnlOYW1lIiwibmFtZSIsInVybCIsIndpbmRvdyIsImxvY2F0aW9uIiwiaHJlZiIsInJlcGxhY2UiLCJyZWdleCIsIlJlZ0V4cCIsImNvbmNhdCIsInJlc3VsdHMiLCJleGVjIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwidXBkYXRlUXVlcnlTdHJpbmdQYXJhbWV0ZXIiLCJ1cmkiLCJrZXkiLCJ2YWx1ZSIsInNlcGFyYXRvciIsImluZGV4T2YiLCJtYXRjaCIsImNsZWFyU2Vzc2lvblN0b3JhZ2UiLCJpIiwic2Vzc2lvblN0b3JhZ2UiLCJsZW5ndGgiLCJyZW1vdmVJdGVtIiwiZGVsZXRlQ29va2llcyIsImRlc3QiLCJzZXRJdGVtIiwiaGFzUmV0dXJuVG8iLCJoYXNRdWVyeVBhcmFtIiwicmV0dXJuVG9VcmwiLCIkIiwiYXR0ciIsInNwbGl0IiwiR2xvYmFsSGVhZGVyIiwidXNlckxvZ2dlZEluIiwic2lnblVwSWZyYW1lUmVuZGVyZWQiLCJnbG9iYWxIZWFkZXIiLCJzaWdudXBYY29tcG9uZW50IiwiY29uc29sZSIsIndhcm4iLCJyZW5kZXIiLCJvYmoiLCJsb2ciLCJyb290RWxlbWVudCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImluaXQiLCJjaGVja1VzZXJTZXNzaW9uIiwiYmluZFVzZXJTZXNzaW9uQ2hlY2tPbkZyZWVTcGx1bmsiLCJhZGRSZWZlcnJlcklkVG9Mb2dpblNpZ251cCIsImJpbmRGb2N1cyIsImdsb2JhbE5hdkFjY2Vzc2liaWxpdHkiLCJiaW5kTGFuZ3VhZ2VTcGVjaWZpY0VsZW1lbnQiLCJiaW5kTW9iaWxlU2VhcmNoRXZlbnQiLCJjaGVja0ZyZWVTcGx1bmsiLCJjaGVja09mZnNldExlZnQiLCJ3aW5kb3dXaWR0aCIsIndpZHRoIiwicmVzaXplIiwib24iLCJmb2N1cyIsInNldFRpbWVvdXQiLCJldmVudCIsInRhcmdldCIsImFkZENsYXNzIiwibmV4dCIsImNsaWNrIiwiJGlucHV0IiwiZmluZCIsInRyaWdnZXIiLCJmb2N1c291dCIsInJlbW92ZUNsYXNzIiwiZXZ0IiwiaGFzQ2xhc3MiLCJhc3NpZ24iLCJjb29raWUiLCJwcmV2ZW50RGVmYXVsdCIsImlzU2NyaXB0TG9hZGVkIiwibG9hZEV4TGFuZUZvcm0iLCJkb3dubG9hZEpTQXRPbmxvYWQiLCJjaGVja1NpZ25VcFJlYWR5Iiwic3RvcFByb3BhZ2F0aW9uIiwic3JjIiwiZWxlbWVudDEiLCJjcmVhdGVFbGVtZW50IiwiZWxlbWVudDIiLCJvbmxvYWQiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJpc01vYmlsZSIsInRlc3QiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJtZCIsIk1vYmlsZURldGVjdCIsImRpbWVuc2lvbnMiLCJnZXRPdmVybGF5U2lnbnVwSWZyYW1lU2l6ZSIsInJlZGlyZWN0VXJsIiwibGFuZyIsInBhZ2VMb2NhbGUiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImdldEF0dHJpYnV0ZSIsInJlcGxhY2VBbGwiLCJ0b0xvd2VyQ2FzZSIsInRyaW0iLCJmYWRlT3V0IiwiaGlkZSIsImFuaW1hdGUiLCJoZWlnaHQiLCJ0aGVtZSIsImxvY2FsZSIsImlzUXVpY2tBY2Nlc3MiLCJpc1JlY2FwdGNoYSIsImN1c3RvbVByb3BzIiwibGVhZFNvdXJjZSIsImZvcm1faWQiLCJvblNpZ251cCIsImRhdGEiLCJzdGF0dXMiLCJlIiwibmV4dEFjdGlvbiIsImlzQ2xvc2VCdXR0b25PbiIsInRpdGxlIiwiaWQiLCJzaG93IiwiZmFkZUluIiwiYmluZFdpbmRvd01lc3NhZ2VMaXN0ZW5lciIsIm1vZGFsIiwiZXZlbnRNZXRob2QiLCJhZGRFdmVudExpc3RlbmVyIiwiZXZlbnRlciIsIm1lc3NhZ2VFdmVudCIsIm1lc3NhZ2UiLCJsb2dpblJlZGlyZWN0VXJsIiwibG9jYXRpb25IcmVmIiwic2lnblVwUmVkaXJlY3RVcmwiLCJzc29pZCIsIkNvb2tpZXMiLCJnZXQiLCJyZW1vdmVBdHRyIiwidXNlcl9pbmZvX2VuZHBvaW50Iiwic2l0ZUNvbmZpZyIsImFqYXgiLCJjYWNoZSIsImRhdGFUeXBlIiwic3VjY2VzcyIsInVzZXJpbmZvIiwibG9naW5fc3RhdHVzIiwiZ2V0RWxlbWVudEJ5SWQiLCJyZW1vdmUiLCJzZXRDb29raWVzIiwidXNlck5hbWUiLCJmaXJzdG5hbWUiLCJnZXRVc2VyUmVnaW9uIiwibGFzdG5hbWUiLCJodG1sIiwiY3JlYXRlVXNlckF2YXRhciIsImZhaWx1cmUiLCJiZXRhX3N0YXR1cyIsInJhdyIsInNldCIsImdhX2lkIiwiZXhwaXJlcyIsInBhdGgiLCJkb21haW4iLCJ1c2VyTmFtZUluaXRpYWwiLCJtb2JpbGVMb2dnZWRJbkF2YXRhcldyYXBwZXIiLCJtb2JpbGVMb2dnZWRPdXRBdmF0YXJXcmFwcGVyIiwiY2xhc3NMaXN0IiwiYWRkIiwidXNlclJlZ2lvbiIsImVhY2giLCJtb3VzZW92ZXIiLCJjaGlsZHJlbiIsIm1vdXNlbGVhdmUiLCJob3ZlciIsImlzIiwicHJvZHVjdHNUYWIiLCJzb2x1dGlvbnNUYWIiLCJ3aHlTcGx1bmtUYWIiLCJyZXNvdXJjZXNUYWIiLCJzdXBwb3J0VGFiIiwia2V5Q29kZSIsInRvZ2dsZUNsYXNzIiwibm90Iiwic2hvd0NsYXNzIiwibmV4dEVsZW1lbnQiLCJwYXJlbnRzIiwic2hpZnRLZXkiLCJwcmV2IiwibmF2SXRlbUNvbXBvbmVudExpc3QiLCJxdWVyeVNlbGVjdG9yQWxsIiwiRXJyb3IiLCJmb3JFYWNoIiwibmF2SXRlbSIsImdldFJpZ2h0TGlzdEl0ZW0iLCJnZXRJdGVtQ29sdW1uIiwiZ2V0TGVmdExpc3RJdGVtIiwiZmx5T3V0V3JhcHBlckVsZW1lbnQiLCJhIiwibiIsInQiLCJoZWFkIiwibyIsImlubmVyVGV4dCIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FB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RSxHQUFHLGlCQUFpQixFQUFFZ0YsQ0FBQyxDQUFDQyxTQUFTLEdBQUdKLENBQUMsRUFBRXBMLENBQUMsQ0FBQ29FLFdBQVcsQ0FBQ21ILENBQUMsQ0FBQyxFQUN6RDlJLFVBQVUsQ0FBQyxZQUFZO01BQUU4SSxDQUFDLENBQUNFLFVBQVUsSUFBSUYsQ0FBQyxDQUFDRSxVQUFVLENBQUNDLFdBQVcsQ0FBQ0gsQ0FBQyxDQUFDO0lBQUMsQ0FBQyxFQUFFRixDQUFDLENBQUM7RUFDOUU7QUFDRixDQUFDLENBQ0U3SixRQUFRLEVBQUVBLFFBQVEsQ0FBQ3pDLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDYSxPQUFPLENBQUMseUJBQXlCLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSw4Q0FBOEMsRUFBRSxJQUFJLENBQUMiLCJmaWxlIjoiODM4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVE9ETyBtb3ZlIHRvIHV0aWxzXG4vKipcbiAqIG1ldGhvZCB0byBnZXQgcXVlcnkgcGFyYW1ldGVyIGJ5IG5hbWUgZnJvbSBwYXNzZWQgcGFnZSB1cmxcbiAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsXG4gKi9cbmNvbnN0IGdldFBhcmFtZXRlckJ5TmFtZSA9ICgobmFtZSwgdXJsKSA9PiB7XG4gICAgaWYgKCF1cmwpIHVybCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuXG4gICAgbmFtZSA9IG5hbWUucmVwbGFjZSgvW1tcXF1dL2csICdcXFxcJCYnKTtcblxuICAgIGNvbnN0IHJlZ2V4ID0gbmV3IFJlZ0V4cChgWz8mXSR7bmFtZX0oPShbXiYjXSopfCZ8I3wkKWApO1xuICAgIGNvbnN0IHJlc3VsdHMgPSByZWdleC5leGVjKHVybCk7XG5cbiAgICBpZiAoIXJlc3VsdHMpIHJldHVybiBudWxsO1xuXG4gICAgaWYgKCFyZXN1bHRzWzJdKSByZXR1cm4gJyc7XG5cbiAgICByZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KHJlc3VsdHNbMl0ucmVwbGFjZSgvXFwrL2csICcgJykpO1xuICB9KTtcblxuICAvLyBUT0RPIG1vdmUgdG8gdXRpbHNcbiAgLyoqXG4gICAqIE1ldGhvZCB0byB1cGRhdGUgdGFyZ2V0IHF1ZXJ5IHBhcmFtZXRlclxuICAgKiBAcGFyYW0ge3N0cmluZ30gdXJpXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBrZXlcbiAgICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXG4gICAqL1xuICBjb25zdCB1cGRhdGVRdWVyeVN0cmluZ1BhcmFtZXRlciA9ICgodXJpLCBrZXksIHZhbHVlKSA9PiB7XG4gICAgY29uc3QgcmVnZXggPSBuZXcgUmVnRXhwKGAoWz8mXSkke2tleX09Lio/KCZ8JClgLCAnaScpO1xuICAgIGNvbnN0IHNlcGFyYXRvciA9IHVyaS5pbmRleE9mKCc/JykgIT09IC0xID8gXCImXCIgOiBcIj9cIjtcblxuICAgIGlmICh1cmkubWF0Y2gocmVnZXgpKSB7XG4gICAgICByZXR1cm4gdXJpLnJlcGxhY2UocmVnZXgsIGAkMSR7a2V5fT0ke3ZhbHVlfSQyYCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB1cmkgKyBzZXBhcmF0b3IgKyBrZXkgKyBcIj1cIiArIHZhbHVlO1xuICAgIH1cbiAgfSk7XG5cbiAgd2luZG93LmNsZWFyU2Vzc2lvblN0b3JhZ2UgPSAoKCkgPT4ge1xuICAgIGxldCBpID0gc2Vzc2lvblN0b3JhZ2UubGVuZ3RoO1xuICAgIHdoaWxlIChpLS0pIHtcbiAgICAgIGxldCBrZXkgPSBzZXNzaW9uU3RvcmFnZS5rZXkoaSk7XG4gICAgICBpZiAoa2V5Lm1hdGNoKC8tbm90aWZpY2F0aW9uLXNlbnQvZykpIHtcbiAgICAgICAgc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG5cbiAgd2luZG93LmRlbGV0ZUNvb2tpZXMgPSAoKGRlc3QpID0+IHtcbiAgICAvL1NldHRpbmcgYWxsIGNvb2tpZXMgdG8gZXhwaXJlIGltbWVkaWF0ZWx5XG4gICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgnU1BMVU5LX1VTRVJfTE9HSU5fU1RBVFVTJywgJ2ZhbHNlJyk7XG4gICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgnU1BMVU5LX1VTRVJfQkVUQV9TVEFUVVMnLCAnJyk7XG4gICAgc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbSgnU1BMVU5LX1VTRVJfR1VJRCcpO1xuXG4gICAgc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbSgnU1BMVU5LX1VTRVJfRU1BSUwnKTtcbiAgICBzZXNzaW9uU3RvcmFnZS5yZW1vdmVJdGVtKCdTUExVTktfVVNFUl9OQU1FJyk7XG4gICAgc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbSgnU1BMVU5LX1VTRVJfREFURV9SRUdJU1RFUkVEJyk7XG4gICAgc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbSgnU1BMVU5LX1VTRVJfU0FMRVNGT1JDRUlEJyk7XG4gICAgc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbSgnU1BMVU5LX1VTRVJfU1RBVEUnKTtcbiAgICBzZXNzaW9uU3RvcmFnZS5yZW1vdmVJdGVtKCdTUExVTktfVVNFUl9VTkFNRScpO1xuICAgIHNlc3Npb25TdG9yYWdlLnJlbW92ZUl0ZW0oJ1NQTFVOS19VU0VSX1ZBTElEQVRFRF9FTUFJTCcpO1xuXG4gICAgc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbSgnU1BMVU5LX1VTRVJfUEFSRU5UUycpO1xuICAgIHNlc3Npb25TdG9yYWdlLnJlbW92ZUl0ZW0oJ1NQTFVOS19VU0VSX1VJRCcpO1xuICAgIHNlc3Npb25TdG9yYWdlLnJlbW92ZUl0ZW0oJ1NQTFVOS19VU0VSX0xBU1RfU0VFTicpO1xuXG4gICAgaWYgKGRlc3QgIT09IG51bGwpIHtcbiAgICAgIGNvbnN0IGhhc1JldHVyblRvID0gKGRlc3QuaW5kZXhPZigncmV0dXJuX3RvJykgIT09IC0xKTtcbiAgICAgIGNvbnN0IGhhc1F1ZXJ5UGFyYW0gPSAoZGVzdC5pbmRleE9mKCc/JykgIT09IC0xKTtcbiAgICAgIGNvbnN0IHJldHVyblRvVXJsID0gJChsb2NhdGlvbikuYXR0cignaHJlZicpLnNwbGl0KCc/JylbMF07XG5cbiAgICAgIGlmICghaGFzUmV0dXJuVG8pIHtcbiAgICAgICAgaWYgKCFoYXNRdWVyeVBhcmFtKSB7XG4gICAgICAgICAgZGVzdCArPSBgP3JldHVybl90bz0ke3JldHVyblRvVXJsfWBcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBkZXN0ICs9IGAmcmV0dXJuX3RvPSR7cmV0dXJuVG9Vcmx9YFxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoZ2V0UGFyYW1ldGVyQnlOYW1lKCdyZXR1cm5fdG8nLCBkZXN0KSAhPT0gcmV0dXJuVG9VcmwpIHtcbiAgICAgICAgICBkZXN0ID0gdXBkYXRlUXVlcnlTdHJpbmdQYXJhbWV0ZXIoZGVzdCwgJ3JldHVybl90bycsIHJldHVyblRvVXJsKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBkZXN0O1xuICAgIH1cbiAgfSk7XG5cbiAgY29uc3QgR2xvYmFsSGVhZGVyID0gKCgpID0+IHtcbiAgICBsZXQgdXNlckxvZ2dlZEluID0gbnVsbDtcbiAgICB2YXIgc2lnblVwSWZyYW1lUmVuZGVyZWQgPSBmYWxzZTtcblxuICAgIGxldCBnbG9iYWxIZWFkZXI7XG5cbiAgICAvKmVzbGludC1kaXNhYmxlIG5vLWdsb2JhbC1hc3NpZ24qL1xuICAgIGlmICghd2luZG93LnNpZ251cFhjb21wb25lbnQgJiYgd2luZG93LmxvY2F0aW9uLmhyZWYuaW5kZXhPZignbG9jYWxob3N0JykgIT09IC0xKSB7XG4gICAgICBjb25zb2xlLndhcm4oJ3NpZ251cFhjb21wb25lbnQgbm90IGF2YWlsYWJsZScpO1xuICAgICAgd2luZG93LnNpZ251cFhjb21wb25lbnQgPSB7XG4gICAgICAgIHJlbmRlcjogKChvYmopID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhvYmopO1xuICAgICAgICB9KVxuICAgICAgfVxuICAgIH1cbiAgICAvKmVzbGludC1lbmFibGUgbm8tZ2xvYmFsLWFzc2lnbiovXG5cbiAgICBjb25zdCByb290RWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2h0bWwnKTtcblxuICAgIGNvbnN0IGluaXQgPSAoKCkgPT4ge1xuICAgICAgY2hlY2tVc2VyU2Vzc2lvbigpO1xuICAgICAgYmluZFVzZXJTZXNzaW9uQ2hlY2tPbkZyZWVTcGx1bmsoKTtcbiAgICAgIGFkZFJlZmVycmVySWRUb0xvZ2luU2lnbnVwKCk7XG4gICAgICAvL2JpbmRDbG9zZUJ1dHRvbigpO1xuICAgICAgLy8gaW5pdEhhbWJ1cmdlckFuaW1hdGlvbigpO1xuICAgICAgYmluZEZvY3VzKCk7XG4gICAgICBnbG9iYWxOYXZBY2Nlc3NpYmlsaXR5KCk7XG4gICAgICBiaW5kTGFuZ3VhZ2VTcGVjaWZpY0VsZW1lbnQoKTtcbiAgICAgIGJpbmRNb2JpbGVTZWFyY2hFdmVudCgpO1xuICAgICAgY2hlY2tGcmVlU3BsdW5rKCk7XG4gICAgICBjaGVja09mZnNldExlZnQoKTtcblxuICAgICAgdmFyIHdpbmRvd1dpZHRoID0gJCh3aW5kb3cpLndpZHRoKCk7XG4gICAgICAkKHdpbmRvdykucmVzaXplKGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAoJCh3aW5kb3cpLndpZHRoKCkgIT0gd2luZG93V2lkdGgpIHtcbiAgICAgICAgICAgIHdpbmRvd1dpZHRoID0gJCh3aW5kb3cpLndpZHRoKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgJCgnbGkuc2VhcmNoLW5hdi1pdGVtLWJzNCAuc2VhcmNoLWljb24nKS5vbignY2xpY2snLGZ1bmN0aW9uKCl7XG4gICAgICAgICQoJyNzZWFyY2hGb3JtIGlucHV0JykuZm9jdXMoKTtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgJCgnLnNlYXJjaC1jb250YWluZXIgaW5wdXQnKS5mb2N1cygpO1xuICAgICAgICB9LCBcIjBcIik7ICAgICAgICBcbiAgICAgIH0pXG4gICAgICAkKCcuY2hlY2tMb2dpbicpLm9uKCdjbGljaycsZnVuY3Rpb24oKXtcbiAgICAgICAgbGV0IHVybCA9ICQodGhpcykuYXR0cignaHJlZicpO1xuICAgICAgICBpZih1cmwgPT09ICd1bmRlZmluZWQnKXtcbiAgICAgICAgICB1cmwgPSAkKGV2ZW50LnRhcmdldCkuYXR0cignaHJlZicpO1xuICAgICAgICB9XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gdXJsO1xuICAgICAgfSlcbiAgICB9KTtcblxuICAgIGNvbnN0IGNoZWNrRnJlZVNwbHVuayA9ICgpID0+IHtcbiAgICAgIGlmICghJChcIi5mcmVlLXNwbHVua1wiKVswXSl7XG4gICAgICAgICQoJ3VsI2FjY291bnQnKS5hZGRDbGFzcygnbm8tZnJlZS1zcGx1bmsnKTtcbiAgICAgICAgJCgnYSNUb3BfTmF2LUxhbmd1YWdlcycpLm5leHQoKS5hZGRDbGFzcygnbm8tZnJlZS1zcGx1bmsnKTtcbiAgICAgICAgJCgnLnNlYXJjaC1jb250YWluZXInKS5hZGRDbGFzcygnbm8tZnJlZS1zcGx1bmsnKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgY29uc3QgYmluZE1vYmlsZVNlYXJjaEV2ZW50ID0gKCgpID0+IHtcbiAgICAgICQoJy5ib3R0b20tbGlua3MgLnNlYXJjaC1pY29uLWNvbnRhaW5lcicpLmNsaWNrKGZ1bmN0aW9uKCkge1xuICAgICAgICAkKCcuYm90dG9tLWxpbmtzIC5zZWFyY2gtaWNvbi1jb250YWluZXInKS5hZGRDbGFzcygnb3BlbicpO1xuICAgICAgICBsZXQgJGlucHV0ID0gJCh0aGlzKS5maW5kKCdpbnB1dCcpXG4gICAgICAgICRpbnB1dC50cmlnZ2VyKCdmb2N1cycpO1xuICAgICAgICAkaW5wdXQuZm9jdXNvdXQoZnVuY3Rpb24oKXtcbiAgICAgICAgICAkKCcuYm90dG9tLWxpbmtzIC5zZWFyY2gtaWNvbi1jb250YWluZXInKS5yZW1vdmVDbGFzcygnb3BlbicpO1xuICAgICAgICB9KVxuICAgICAgfSlcbiAgICB9KVxuICAgIC8qKlxuICAgICAqIE1ldGhvZCB0byBtYWtlIHN1cmUgdGhhdCBmcmVlIHNwbHVuayBmb3JtIGlzIG9ubHkgZ2VuZXJhdGVkIHdoZW4gdXNlciBpbnRlcmFjdHMgd2l0aCBpdFxuICAgICAqL1xuICAgIGNvbnN0IGJpbmRVc2VyU2Vzc2lvbkNoZWNrT25GcmVlU3BsdW5rID0gKCgpID0+IHtcbiAgICAgICQoJyNmcmVlLXNwbHVuay1jbGljay1kZXNrdG9wLCAjZnJlZS1zcGx1bmstY2xpY2stbW9iaWxlJykub24oJ2NsaWNrJywgKGV2dCkgPT4ge1xuICAgICAgICBpZigkKGV2ZW50LnRhcmdldCkuaGFzQ2xhc3MoJ25vaWZyYW1lJykpe1xuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5hc3NpZ24oJChldmVudC50YXJnZXQpLmF0dHIoJ2hyZWYnKSk7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChkb2N1bWVudC5jb29raWUuaW5kZXhPZignV0VCSUQ9JykgPT09IC0xICkge1xuICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnNvbGUubG9nKHNpZ25VcElmcmFtZVJlbmRlcmVkKVxuICAgICAgICAvLyB0dXJuIG9mZiBjdXJyZW50IGNsaWNrIGhhbmRsZXJcbiAgICAgICAgLy8kKCcjZnJlZS1zcGx1bmstY2xpY2stZGVza3RvcCwgI2ZyZWUtc3BsdW5rLWNsaWNrLW1vYmlsZScpLm9mZignY2xpY2snKTtcbiAgICAgICAgLy8gJGN1cnJlbnRUYXJnZXQgPSAkKGV2dC5jdXJyZW50VGFyZ2V0KTtcbiAgICAgICAgLy8gY29uc3QgaHJlZiA9ICRjdXJyZW50VGFyZ2V0LmF0dHIoJ2hyZWYnKTtcbiAgICAgICAgaWYgKHVzZXJMb2dnZWRJbiA9PT0gZmFsc2UpIHtcbiAgICAgICAgICBpZihpc1NjcmlwdExvYWRlZCgkKCcjZnJlZVNwbHVua1NyYycpLmF0dHIoJ2RhdGEtc3JjLWZyZWVzcGx1bmstMScpKSl7XG4gICAgICAgICAgICBsb2FkRXhMYW5lRm9ybSgpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBkb3dubG9hZEpTQXRPbmxvYWQoKTtcbiAgICAgICAgICAgIGNoZWNrU2lnblVwUmVhZHkoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgLy9ldnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAvL2V2dC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAvLyBiaW5kaW5ncyBub3QgY29tcGxldGVkIHVzZXIgc2Vzc2lvbiBub3QgY2hlY2tlZFxuICAgICAgICB9IGVsc2UgaWYgKHVzZXJMb2dnZWRJbiA9PT0gbnVsbCkge1xuICAgICAgICAgIGNvbnNvbGUud2FybignU2Vzc2lvbiBjaGVjayBwZW5kaW5nJyk7XG4gICAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgZXZ0LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIGNvbnN0IGNoZWNrU2lnblVwUmVhZHkgPSAoKSA9PiB7XG4gICAgICBpZih0eXBlb2Yoc2lnbnVwWGNvbXBvbmVudCkgIT09ICd1bmRlZmluZWQnKXtcbiAgICAgICAgbG9hZEV4TGFuZUZvcm0oKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHdpbmRvdy5zZXRUaW1lb3V0KGNoZWNrU2lnblVwUmVhZHksIDIwMCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgaXNTY3JpcHRMb2FkZWQgPSAoc3JjKSA9PiB7XG4gICAgICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcignc2NyaXB0W3NyYz1cIicgKyBzcmMgKyAnXCJdJykgPyB0cnVlIDogZmFsc2U7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZG93bmxvYWRKU0F0T25sb2FkKCkge1xuICAgICAgdmFyIGVsZW1lbnQxID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKTtcbiAgICAgIHZhciBlbGVtZW50Mj0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKTtcblxuICAgICAgZWxlbWVudDEuc3JjID0gJCgnI2ZyZWVTcGx1bmtTcmMnKS5hdHRyKCdkYXRhLXNyYy1mcmVlc3BsdW5rLTEnKTtcbiAgICAgIGVsZW1lbnQyLnNyYyA9ICQoJyNmcmVlU3BsdW5rU3JjJykuYXR0cignZGF0YS1zcmMtZnJlZXNwbHVuay0yJyk7XG5cbiAgICAgIGVsZW1lbnQxLm9ubG9hZCA9IGZ1bmN0aW9uKCl7XG5cbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChlbGVtZW50Mik7XG5cbiAgICAgIH07XG4gICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGVsZW1lbnQxKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBtZXRob2QgdG8gZ2VuZXJhdGUgYW5kIGxvYWQgRnJlZSBTcGx1bmsgZm9ybVxuICAgICAqL1xuICAgIGNvbnN0IGxvYWRFeExhbmVGb3JtID0gKCgpID0+IHtcbiAgICAgIGxldCBpc01vYmlsZSA9IGZhbHNlO1xuICAgICAgaWYgKC9BbmRyb2lkfHdlYk9TfGlQaG9uZXxpUGFkfGlQb2R8QmxhY2tCZXJyeXxCQnxQbGF5Qm9va3xJRU1vYmlsZXxXaW5kb3dzIFBob25lfEtpbmRsZXxTaWxrfE9wZXJhIE1pbmkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpKSB7XG4gICAgICAgIGlzTW9iaWxlID0gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IG1kID0gbmV3IE1vYmlsZURldGVjdCh3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudCk7XG4gICAgICBjb25zdCBkaW1lbnNpb25zID0gbWQuZ2V0T3ZlcmxheVNpZ251cElmcmFtZVNpemUoKTtcbiAgICAgIGNvbnN0IHJlZGlyZWN0VXJsID0gJCgnI2ZyZWUtc3BsdW5rLWNsaWNrLWRlc2t0b3AnKS5hdHRyKCdocmVmJyk7XG5cbiAgICAgIC8qKlxuICAgICAgICogc2lnbiBvciBsb2dpbiBpc3N1ZSBXV1ctMTQ2MTcgJiBXV1ctMTQ3MjlcbiAgICAgICAqL1xuICAgICAgdmFyIGxhbmcgPSAnJztcbiAgICAgIHZhciBwYWdlTG9jYWxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2JvZHknKVswXS5nZXRBdHRyaWJ1dGUoJ2xhbmcnKTtcbiAgICAgIC8vIGlmIHRoZSBsYW5nIGF0dHJpYnV0ZSBpcyBudWxsXG4gICAgICBpZiAoIXBhZ2VMb2NhbGUpIHtcbiAgICAgICAgbGFuZyA9ICdlbl91cyc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBpZiB0aGUgbGFuZyBhdHRyaWJ1dGUgaXMgbm90IG51bGxcbiAgICAgICAgaWYgKHBhZ2VMb2NhbGUgPT0gXCJ6aC1IYW5zXCIpIHtcbiAgICAgICAgICBwYWdlTG9jYWxlID0gXCJ6aC1oYW5zX2NuXCI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcGFnZUxvY2FsZSA9IHBhZ2VMb2NhbGUucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpLnRvTG93ZXJDYXNlKCkudHJpbSgpO1xuICAgICAgICB9XG4gICAgICAgIGxhbmcgPSBwYWdlTG9jYWxlO1xuICAgICAgICBpZiAobGFuZy5sZW5ndGggPT09IDAgfHwgbGFuZyA9PSBcImtvX2tyXCIgfHwgbGFuZyA9PSBcInpoX3R3XCIgfHwgbGFuZyA9PSBcInpoXCIgfHwgbGFuZyA9PSBcImVuXCIpIHtcbiAgICAgICAgICBsYW5nID0gJ2VuX3VzJztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAkKCcjZnJlZS1zcGx1bmstY2xpY2stbW9iaWxlJykuYWRkQ2xhc3MoJ2V4cHJlc3MtbGFuZS1vcGVuJyk7XG5cbiAgICAgICQoJyNmcmVlLXNwbHVuay1jbGljay1kZXNrdG9wJykuYWRkQ2xhc3MoJ2V4cHJlc3MtbGFuZS1vcGVuJyk7XG5cbiAgICAgICQoJyNpZnJhbWUtbW9kYWwnKS5jbGljaygoKSA9PiB7XG4gICAgICAgIGlmICgkKCcub3ZlcmxheS1mb3JtLW1vZGFsJykuaGFzQ2xhc3MoJ3Nob3cnKSkge1xuICAgICAgICAgICQoJy5vdmVybGF5LWZvcm0tbW9kYWwnKS5yZW1vdmVDbGFzcygnc2hvdycpLmZhZGVPdXQoKTtcbiAgICAgICAgICAkKCcubW9kYWwtYmFja2Ryb3AnKS5oaWRlKCk7XG4gICAgICAgICAgJCgnLm92ZXJsYXktZm9ybScpLmFuaW1hdGUoeydtYXJnaW4tcmlnaHQnOiAnLScrJCgnLm92ZXJsYXktZm9ybScpLndpZHRoKCkrJ3B4J30pO1xuICAgICAgICAgICQoJ2JvZHknKS5yZW1vdmVDbGFzcygnbW9kYWwtb3BlbicpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICQoJy5vdmVybGF5LWZvcm0tbW9kYWwnKS5hZGRDbGFzcygnc2hvdycpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIC8qKlxuICAgICAgICogc2lnbiB1cCBmb3JtIC0gZXhwcmVzcyBmbG93LlxuICAgICAgICovXG4gICAgICBpZighc2lnblVwSWZyYW1lUmVuZGVyZWQpIHtcbiAgICAgICAgc2lnbnVwWGNvbXBvbmVudC5yZW5kZXIoe1xuICAgICAgICAgIGRpbWVuc2lvbnM6IHtcbiAgICAgICAgICAgIHdpZHRoOiBkaW1lbnNpb25zLndpZHRoLFxuICAgICAgICAgICAgaGVpZ2h0OiBkaW1lbnNpb25zLmhlaWdodFxuICAgICAgICAgIH0sXG4gICAgICAgICAgdGhlbWU6ICdsaWdodCcsXG4gICAgICAgICAgbG9jYWxlOiBsYW5nLFxuICAgICAgICAgIHJlZGlyZWN0VXJsOiByZWRpcmVjdFVybCxcbiAgICAgICAgICBpc01vYmlsZTogaXNNb2JpbGUsXG4gICAgICAgICAgaXNRdWlja0FjY2VzczogdHJ1ZSxcbiAgICAgICAgICBpc1JlY2FwdGNoYTogZmFsc2UsXG4gICAgICAgICAgY3VzdG9tUHJvcHM6IHtcbiAgICAgICAgICAgIGxlYWRTb3VyY2U6ICdzcGx1bmsnLFxuICAgICAgICAgICAgZm9ybV9pZCA6ICdPdmVybGF5XFx1MDAyRGZvcm0nXG4gICAgICAgICAgfSxcbiAgICAgICAgICBvblNpZ251cDogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgIGlmIChkYXRhLnN0YXR1cyA9PSAnY2xvc2UnKSB7XG4gICAgICAgICAgICAgICAgJCgnaHRtbCcpLnJlbW92ZUNsYXNzKCdpcGhvbmUtZml4Jyk7XG4gICAgICAgICAgICAgICAgJCgnYm9keScpLnJlbW92ZUNsYXNzKCdpcGhvbmUtZml4Jyk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgLy9kbyBub3RoaW5nXG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdubyBzdGF0dXMgdG8gY2xvc2UnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG5leHRBY3Rpb24oZGF0YSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBpc0Nsb3NlQnV0dG9uT246IHRydWUsXG4gICAgICAgICAgdGl0bGU6ICdHZXQgU3RhcnRlZCBXaXRoIFNwbHVuaycsXG4gICAgICAgICAgaWQ6ICdoZWFkZXItc2lnbnVwLXhjb21wJ1xuICAgICAgICB9LCAnI2hlYWRlci1zaWdudXAteGNvbXAnKTtcbiAgICAgICAgc2lnblVwSWZyYW1lUmVuZGVyZWQgPSB0cnVlO1xuICAgICAgfVxuICAgICAgJCgnLmV4cHJlc3MtbGFuZS1vcGVuJykuY2xpY2soZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgaWYgKCQoZS50YXJnZXQpLmhhc0NsYXNzKCdleHByZXNzLWxhbmUtb3BlbicpKSB7XG4gICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICQoJyNoZWFkZXItc2lnbnVwLXhjb21wJykuYW5pbWF0ZSh7ICdtYXJnaW4tcmlnaHQnOiAnMHB4JyB9KTtcbiAgICAgICAgICAkKCcubW9kYWwtYmFja2Ryb3AnKS5zaG93KCk7XG4gICAgICAgICAgJCgnLm92ZXJsYXktZm9ybS1tb2RhbCcpLmZhZGVJbigpLmFkZENsYXNzKCdzaG93Jyk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBiaW5kV2luZG93TWVzc2FnZUxpc3RlbmVyKCk7XG5cbiAgICAgIC8vIHNpbmNlIHdlJ3JlIGxvYWRpbmcgY29tcG9uZW50IG9uIGJ1dHRvbiBjbGljaywgdXNlciBoYXNcbiAgICAgIC8vIGFscmVhZHkgY2xpY2tlZCBvbiBmcmVlIHNwbHVuayBidXR0b24uIE9wZW4gTW9kYWwgYW5kIHNob3dcbiAgICAgIC8vIHJlcXVpcmVkIGZvcm0uXG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgaWYgKCF1c2VyTG9nZ2VkSW4pIHtcbiAgICAgICAgICAkKCcjaWZyYW1lLW1vZGFsJykubW9kYWwoJ3Nob3cnKTtcbiAgICAgICAgICAkKCdodG1sJykuYWRkQ2xhc3MoJ3N0b3Atc2Nyb2xsaW5nJyk7XG4gICAgICAgICAgJCgnI2hlYWRlci1zaWdudXAteGNvbXAnKS5hbmltYXRlKHsgJ21hcmdpbi1yaWdodCc6ICcwcHgnIH0pO1xuICAgICAgICB9XG4gICAgICB9LCAwKTtcbiAgICB9KTtcblxuICAgIC8qKlxuICAgICAqIE1ldGhvZCB0byBiaW5kIHdpbmRvdyBtZXNzYWdlIGxpc3RlciBmb3IgRnJlZSBTcGx1bmsgRm9ybVxuICAgICAqL1xuICAgIGNvbnN0IGJpbmRXaW5kb3dNZXNzYWdlTGlzdGVuZXIgPSAoKCkgPT4ge1xuICAgICAgLy8gTGlzdGVuZXIgZXZlbnQgdG8gaGFuZGxlIGNsaWNrIGV2ZW50IGZyb20gaWZyYW1lIG9yIGNoaWxkIHdpbmRvd1xuICAgICAgY29uc3QgZXZlbnRNZXRob2QgPSB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciA/ICdhZGRFdmVudExpc3RlbmVyJyA6ICdhdHRhY2hFdmVudCc7XG4gICAgICBjb25zdCBldmVudGVyID0gd2luZG93W2V2ZW50TWV0aG9kXTtcbiAgICAgIGNvbnN0IG1lc3NhZ2VFdmVudCA9IGV2ZW50TWV0aG9kID09ICdhdHRhY2hFdmVudCcgPyAnb25tZXNzYWdlJyA6ICdtZXNzYWdlJztcblxuICAgICAgLy8gTGlzdGVuIHRvIG1lc3NhZ2UgZnJvbSBjaGlsZCB3aW5kb3dcbiAgICAgIGV2ZW50ZXIobWVzc2FnZUV2ZW50LGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICBjb25zdCBrZXkgPSBlLm1lc3NhZ2UgPyAnbWVzc2FnZScgOiAnZGF0YSc7XG4gICAgICAgICAgY29uc3QgZGF0YSA9IGVba2V5XTtcbiAgICAgICAgICAvL3J1biBmdW5jdGlvbi8vXG4gICAgICAgICAgaWYoZGF0YSA9PSAnaGlkZS1zaWdudXAtZm9ybScpIHtcbiAgICAgICAgICAgICQoJyNpZnJhbWUtbW9kYWwnKS5tb2RhbCgnaGlkZScpO1xuICAgICAgICAgICAgJCgnI2lmcmFtZS1tb2RhbCcpLmZhZGVPdXQoKTtcbiAgICAgICAgICAgICQoJy5tb2RhbC1iYWNrZHJvcCcpLmZhZGVPdXQoKTtcbiAgICAgICAgICAgICQoJ2h0bWwnKS5yZW1vdmVDbGFzcygnaXBob25lLWZpeCBzdG9wLXNjcm9sbGluZycpO1xuICAgICAgICAgICAgJCgnYm9keScpLnJlbW92ZUNsYXNzKCdpcGhvbmUtZml4Jyk7XG4gICAgICAgICAgICAkKCdib2R5JykucmVtb3ZlQ2xhc3MoJ21vZGFsLW9wZW4nKTtcbiAgICAgICAgICAgICQoJy5vdmVybGF5LWZvcm0nKS5hbmltYXRlKHsnbWFyZ2luLXJpZ2h0JzogJy0nKyQoJy5vdmVybGF5LWZvcm0nKS53aWR0aCgpKydweCd9KTtcbiAgICAgICAgICB9XG5cbiAgICAgIH0sZmFsc2UpO1xuXG4gICAgICAkKCcjZnJlZS1zcGx1bmstY2xpY2stZGVza3RvcCcpLmNsaWNrKGZ1bmN0aW9uKCl7XG4gICAgICAgICAgJCgnaHRtbCcpLmFkZENsYXNzKCdzdG9wLXNjcm9sbGluZycpO1xuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICAvKipcbiAgICAgKiBNZXRob2QgdG8gYWRkIHJlZGlyZWN0VXJsIHRvIHNpZ24gdXAgYW5kIGxvZ2luIGxpbmtzLlxuICAgICAqL1xuICAgIGNvbnN0IGFkZFJlZmVycmVySWRUb0xvZ2luU2lnbnVwID0gKCgpID0+IHtcbiAgICAgIGxldCBsb2dpblJlZGlyZWN0VXJsID0gJCgnI2xvZ2luSWQnKS5hdHRyKCdocmVmJyk7XG4gICAgICBjb25zdCBsb2NhdGlvbkhyZWYgPSAkKGxvY2F0aW9uKS5hdHRyKCdocmVmJykuc3BsaXQoJz8nKVswXTtcblxuICAgICAgaWYgKCFsb2dpblJlZGlyZWN0VXJsIHx8IGxvZ2luUmVkaXJlY3RVcmwuaW5kZXhPZigncmVkaXJlY3R1cmwnKSAhPT0gLTEpIHtcbiAgICAgICAgY29uc29sZS53YXJuKCdpbmNvcnJlY3QgbG9naW4gbGluaycpO1xuICAgICAgfVxuXG4gICAgICBsb2dpblJlZGlyZWN0VXJsID0gYCR7bG9naW5SZWRpcmVjdFVybH0mcmVkaXJlY3R1cmw9JHtsb2NhdGlvbkhyZWZ9YDtcbiAgICAgICQoJ1tpZD1sb2dpbklkXScpLmF0dHIoJ2hyZWYnLCBsb2dpblJlZGlyZWN0VXJsKTtcblxuICAgICAgbGV0IHNpZ25VcFJlZGlyZWN0VXJsID0gJCgnI3NpZ25JZCcpLmF0dHIoJ2hyZWYnKTtcbiAgICAgIHNpZ25VcFJlZGlyZWN0VXJsID0gYCR7c2lnblVwUmVkaXJlY3RVcmx9P3JlZGlyZWN0dXJsPSR7bG9jYXRpb25IcmVmfWA7XG4gICAgICAkKCdbaWQ9c2lnbklkXScpLmF0dHIoJ2hyZWYnLCBzaWduVXBSZWRpcmVjdFVybCk7XG4gICAgfSk7XG5cbiAgICAvKipcbiAgICAgKiBNZXRob2QgdG8gY2hlY2sgaWYgdXNlciBzZXNzaW9uIGlzIGF2YWlsYWJsZSBhbmQgaW5pdGlhbGl6ZSBmcmVlIHNwbHVuayBmb3JtXG4gICAgICogaWYgdmFsaWQgc2Vzc2lvbiBpcyBub3QgYXZhaWxhYmxlXG4gICAgICovXG4gICAgY29uc3QgY2hlY2tVc2VyU2Vzc2lvbiA9ICgoKSA9PiB7XG4gICAgICBjb25zdCBzc29pZCA9IENvb2tpZXMuZ2V0KCdXRUJJRCcpO1xuICAgICAgaWYgKHNzb2lkKSB7XG5cbiAgICAgICAgaWYoJCgnLmNoZWNrTG9naW4nKS5sZW5ndGggPiAwKXtcbiAgICAgICAgICAkKCcuY2hlY2tMb2dpbicpLnJlbW92ZUF0dHIoXCJkYXRhLW1vZGFsLXRpdGxlICBkYXRhLW1vZGFsLWNvbnRlbnQtdXJsIGRhdGEtdG9nZ2xlXCIpLmF0dHIoXCJ0YXJnZXRcIixcIlwiKS5hdHRyKFwiZGF0YS10YXJnZXRcIixcIiNcIik7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHVzZXJfaW5mb19lbmRwb2ludCA9ICcnO1xuICAgICAgICAvKiBlc2xpbnQtZGlzYWJsZSBuby11bmRlZiovXG4gICAgICAgIGlmICh0eXBlb2Ygc2l0ZUNvbmZpZy51c2VyX2luZm9fZW5kcG9pbnQgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgdXNlcl9pbmZvX2VuZHBvaW50ID0gc2l0ZUNvbmZpZy51c2VyX2luZm9fZW5kcG9pbnQ7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgIHVzZXJfaW5mb19lbmRwb2ludCA9IFwiL2FwaS9iaW4vdXNlci9pbmZvXCI7XG4gICAgICAgIH1cbiAgICAgICAgLyogZXNsaW50LWRpc2FibGUgbm8tdW5kZWYqL1xuICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgIGNhY2hlOiBmYWxzZSxcbiAgICAgICAgICB1cmw6IHVzZXJfaW5mb19lbmRwb2ludCxcbiAgICAgICAgICBkYXRhVHlwZTogJ2pzb24nLFxuICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uICh1c2VyaW5mbykge1xuICAgICAgICAgICAgaWYgKCF1c2VyaW5mby5sb2dpbl9zdGF0dXMpIHtcbiAgICAgICAgICAgICAgaWYoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzaGFyZWRnbG9iYWxoZWFkZXJcIik9PT1udWxsKXtcbiAgICAgICAgICAgICAgICAkKCcubG9nZ2VkaW4tdXNlci1saW5rJykucmVtb3ZlKCk7XG4gICAgICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgICAgICQoJy5sb2dnZWRpbi11c2VyLWxpbmsnKS5oaWRlKCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgJCgnLmhhcy1wcm9kdWN0LWxpbmtzJykucmVtb3ZlQ2xhc3MoJ2xvZ2dlZC1pbicpO1xuICAgICAgICAgICAgICB1c2VyTG9nZ2VkSW4gPSBmYWxzZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHVzZXJMb2dnZWRJbiA9IHRydWU7XG4gICAgICAgICAgICAgIHNldENvb2tpZXModXNlcmluZm8pO1xuICAgICAgICAgICAgICAkKCcubG9nZ2Vkb3V0LXVzZXItbGluaycpLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAkKCcubG9nZ2VkaW4tdXNlci1saW5rJykucmVtb3ZlQ2xhc3MoJ2hpZGRlbicpO1xuICAgICAgICAgICAgICAkKCcuaGFzLXByb2R1Y3QtbGlua3MnKS5hZGRDbGFzcygnbG9nZ2VkLWluJyk7XG5cbiAgICAgICAgICAgICAgbGV0IHVzZXJOYW1lID0gJyc7XG4gICAgICAgICAgICAgIGlmICh1c2VyaW5mby5maXJzdG5hbWUpIHtcbiAgICAgICAgICAgICAgICB1c2VyTmFtZSA9IHVzZXJpbmZvLmZpcnN0bmFtZTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmKGdldFVzZXJSZWdpb24oKSA9PSBcIkFQQUNcIiAmJiB1c2VyaW5mby5sYXN0bmFtZSl7XG4gICAgICAgICAgICAgICAgdXNlck5hbWUgPSB1c2VyaW5mby5sYXN0bmFtZTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICQoJyNsb2dnZWRpbnVzZXJuYW1lJykuaHRtbChgJHt1c2VyTmFtZX1gKTtcbiAgICAgICAgICAgICAgJCgnI2xvZ2dlZGludXNlcm5hbWVtb2JpbGUnKS5odG1sKGAke3VzZXJOYW1lfWApO1xuICAgICAgICAgICAgICAkKCcjbW9iaWxlLWFjY291bnQnKS5maW5kKCcjbXlkYXNoYm9hcmQnKS5odG1sKGAke3VzZXJOYW1lfWApO1xuXG4gICAgICAgICAgICAgICQoJyNmcmVlLXNwbHVuay1jbGljay1kZXNrdG9wJykuYXR0cignZGF0YS10YXJnZXQnLCAnJyk7XG4gICAgICAgICAgICAgICQoJyNmcmVlLXNwbHVuay1jbGljay1tb2JpbGUnKS5hdHRyKCdkYXRhLXRhcmdldCcsICcnKTtcbiAgICAgICAgICAgICAgJCgnI2ZyZWUtc3BsdW5rLWNsaWNrLWRlc2t0b3AnKS5hdHRyKCdkYXRhLXRvZ2dsZScsICcnKTtcbiAgICAgICAgICAgICAgJCgnI2ZyZWUtc3BsdW5rLWNsaWNrLW1vYmlsZScpLmF0dHIoJ2RhdGEtdG9nZ2xlJywgJycpO1xuXG4gICAgICAgICAgICAgICQoJy5zcGx1bmstaWNvbi5pY29uLWV4cGFuZGVkLXVzZXItaWNvbicpLmhpZGUoKTtcbiAgICAgICAgICAgICAgY3JlYXRlVXNlckF2YXRhcih1c2VyTmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBmYWlsdXJlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB1c2VyTG9nZ2VkSW4gPSBmYWxzZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYoJCgnLmNoZWNrTG9naW4nKS5sZW5ndGggPiAwKXtcbiAgICAgICAgICAkKCcuY2hlY2tMb2dpbicpLnJlbW92ZUNsYXNzKCdjaGVja0xvZ2luJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzaGFyZWRnbG9iYWxoZWFkZXJcIik9PT1udWxsKXtcbiAgICAgICAgICAkKCcubG9nZ2VkaW4tdXNlci1saW5rJykucmVtb3ZlKCk7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICQoJy5sb2dnZWRpbi11c2VyLWxpbmsnKS5oaWRlKCk7XG4gICAgICAgIH1cbiAgICAgICAgJCgnLmxvZ2dlZG91dC11c2VyLWxpbmsnKS5yZW1vdmVDbGFzcygnbG9nZ2Vkb3V0LXVzZXItbGluaycpO1xuICAgICAgICAkKCcuc3BsdW5rLWljb24uaWNvbi1leHBhbmRlZC11c2VyLWljb24nKS5zaG93KCk7XG4gICAgICAgICQoJy5zcGx1bmstdXNlci1hdmF0YXInKS5hZGRDbGFzcygnaGlkZGVuJyk7XG5cbiAgICAgICAgdXNlckxvZ2dlZEluID0gZmFsc2U7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvKipcbiAgICAgKlxuICAgICAqIFNldCBDb29raWUgQ29kZSAoTm90IHBvbGx1dGluZyBHbG9iYWwgbmFtZXNwYWNlIGFzIGl0IGhhcyB0byBiZSBvbmx5IHVzZWQgd2hlIHVzciBsb2dzaW4pXG4gICAgICovXG4gICAgIGZ1bmN0aW9uIHNldENvb2tpZXModXNlcmluZm8pIHtcbiAgICAgIGlmICh1c2VyaW5mby5sb2dpbl9zdGF0dXMpIHtcbiAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgnU1BMVU5LX1VTRVJfTE9HSU5fU1RBVFVTJywgdXNlcmluZm8ubG9naW5fc3RhdHVzKTtcbiAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgnU1BMVU5LX1VTRVJfQkVUQV9TVEFUVVMnLCB1c2VyaW5mby5iZXRhX3N0YXR1cyk7XG4gICAgICAgICAgQ29va2llcy5yYXcgPSB0cnVlO1xuICAgICAgICAgIENvb2tpZXMuc2V0KFwiX3N0XCIsIHVzZXJpbmZvLmdhX2lkLCB7XG4gICAgICAgICAgICAgIGV4cGlyZXM6IDE4MjUsXG4gICAgICAgICAgICAgIHBhdGg6IFwiL1wiLFxuICAgICAgICAgICAgICBkb21haW46IFwic3BsdW5rLmNvbVwiXG4gICAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRvIGNyZWF0ZSB1c2VyQXZhdGFyIGZyb20gdXNlck5hbWVcbiAgICAgKi9cbiAgICBjb25zdCBjcmVhdGVVc2VyQXZhdGFyID0gKCh1c2VyTmFtZSk9PntcbiAgICAgICAgbGV0IHVzZXJOYW1lSW5pdGlhbCA9IHVzZXJOYW1lWzBdO1xuICAgICAgICBjb25zdCBtb2JpbGVMb2dnZWRJbkF2YXRhcldyYXBwZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc3BsdW5rLWhlYWRlci12Mi1tb2JpbGUgI2xvZ2dlZEluVXNlcldyYXBwZXInKTtcbiAgICAgICAgY29uc3QgbW9iaWxlTG9nZ2VkT3V0QXZhdGFyV3JhcHBlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zcGx1bmstaGVhZGVyLXYyLW1vYmlsZSAjbG9nZ2VkT3V0VXNlcldyYXBwZXInKTtcblxuICAgICAgICBpZiAobW9iaWxlTG9nZ2VkSW5BdmF0YXJXcmFwcGVyICE9PSBudWxsICYmIG1vYmlsZUxvZ2dlZE91dEF2YXRhcldyYXBwZXIgIT09IG51bGwpIHtcbiAgICAgICAgICBtb2JpbGVMb2dnZWRPdXRBdmF0YXJXcmFwcGVyLmNsYXNzTGlzdC5hZGQoJ2hpZGRlbicpO1xuICAgICAgICAgIG1vYmlsZUxvZ2dlZEluQXZhdGFyV3JhcHBlci5jbGFzc0xpc3QucmVtb3ZlKCdoaWRkZW4nKTtcbiAgICAgICAgfVxuXG4gICAgICAgICQoJy5zcGx1bmstdXNlci1hdmF0YXInKS5yZW1vdmVDbGFzcygnaGlkZGVuJykuZmluZCgnLmxvZ2luVXNlck5hbWVJY29uJykuaHRtbCh1c2VyTmFtZUluaXRpYWwpO1xuICAgIH0pXG5cbiAgICBjb25zdCBiaW5kTGFuZ3VhZ2VTcGVjaWZpY0VsZW1lbnQgPSAoKCk9PntcbiAgICAgIGlmKCQoJy5sb2NhbGVfamFfanAnKS5sZW5ndGg+MCl7XG4gICAgICAgICQoJy5zZWFyY2gtaGVscC10ZXh0JykucmVtb3ZlQ2xhc3MoJ3NyLW9ubHknKTtcbiAgICAgICAgJCgnLnNlYXJjaFRleHQnKS5hZGRDbGFzcygnc3Itb25seScpO1xuICAgICAgfWVsc2Uge1xuICAgICAgICAkKCcuc2VhcmNoLWhlbHAtdGV4dCcpLmFkZENsYXNzKCdzci1vbmx5Jyk7XG4gICAgICAgICQoJy5zZWFyY2hUZXh0JykucmVtb3ZlQ2xhc3MoJ3NyLW9ubHknKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIGNvbnN0IGdldFVzZXJSZWdpb24gPSgoKT0+e1xuICAgICAgbGV0IHVzZXJSZWdpb24gPSAnJztcbiAgICAgIGlmKCQoJy5yZWdpb25fQVBBQycpLmxlbmd0aD4wKXtcbiAgICAgICAgdXNlclJlZ2lvbiA9IFwiQVBBQ1wiO1xuICAgICAgfVxuICAgICAgZWxzZSBpZigkKCcucmVnaW9uX0VNRUEnKS5sZW5ndGg+MCl7XG4gICAgICAgIHVzZXJSZWdpb24gPSBcIkVNRUFcIjtcbiAgICAgIH1cbiAgICAgIGVsc2V7XG4gICAgICAgIHVzZXJSZWdpb24gPSBcIlVTXCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gdXNlclJlZ2lvbjtcbiAgICB9KVxuXG4gICAgY29uc3QgYmluZEZvY3VzID0oKCk9PntcbiAgICAgICQoXCIuZm9jdXMtZW5hYmxlZFwiKS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICBpZigkKHdpbmRvdykud2lkdGgoKSA8IDc2OCkge1xuICAgICAgICAgICAgJCh0aGlzKS5jbGljayhmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAoJCh0aGlzKS5oYXNDbGFzcygnb3BlbicpKSA/ICQodGhpcykucmVtb3ZlQ2xhc3MoJ29wZW4nKSA6ICQodGhpcykuYWRkQ2xhc3MoJ29wZW4nKTtcbiAgICAgICAgICAgICAgICAoJCh0aGlzKS5oYXNDbGFzcygnb3BlbicpKSA/ICQoJy5zcGx1bmstaWNvbicpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKSA6ICQoJy5zcGx1bmstaWNvbicpLmFkZENsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKCQodGhpcykuaGFzQ2xhc3MoJ3NlYXJjaC1uYXYtaXRlbS1iczQnKSA9PSAwICkge1xuICAgICAgICAgICAgJCh0aGlzKS5tb3VzZW92ZXIoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICQodGhpcykuYWRkQ2xhc3MoJ29wZW4nKTtcbiAgICAgICAgICAgICAgJCgnLnNwbHVuay1pY29uJykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAgICAgICAkKCcuZmVhdHVyZS1jb250ZW50JykuZWFjaChmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgIGlmKCQodGhpcykuY2hpbGRyZW4oKS5sZW5ndGggPT0gMCl7XG4gICAgICAgICAgICAgICAgICAgICQodGhpcykuaGlkZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAkKHRoaXMpLm1vdXNlbGVhdmUoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgJCh0aGlzKS5yZW1vdmVDbGFzcygnb3BlbicpO1xuICAgICAgICAgICAgICAgICQoJy5zcGx1bmstaWNvbicpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICQoJy5zZWFyY2gtbmF2LWl0ZW0tYnM0JykuY2xpY2soZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgICBpZiggJChlLnRhcmdldCkuaGFzQ2xhc3MoJ2ljb24tZXhwYW5kZWQtc2VhcmNoLWljb24nKSkge1xuICAgICAgICAgICAgICAgICgkKHRoaXMpLmhhc0NsYXNzKCdvcGVuJykpID8gJCh0aGlzKS5yZW1vdmVDbGFzcygnb3BlbicpIDogJCh0aGlzKS5hZGRDbGFzcygnb3BlbicpO1xuICAgICAgICAgICAgICAgICgkKHRoaXMpLmhhc0NsYXNzKCdvcGVuJykpID8gJCgnLnNwbHVuay1pY29uJykuYWRkQ2xhc3MoJ2FjdGl2ZScpIDogJCgnLnNwbHVuay1pY29uJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpICAgICAgICBcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSlcbiAgXG4gICAgfSk7XG5cbiAgICAkKCcubmF2LWl0ZW0tY29tcG9uZW50JykuaG92ZXIoZnVuY3Rpb24oKSB7XG4gICAgICAkKCcuc2VhcmNoLW5hdi1pdGVtLWJzNCcpLnJlbW92ZUNsYXNzKCdvcGVuJyk7XG4gICAgfSk7XG4gICAgXG4gICAgJCgnLm5hdi1pdGVtJykuaG92ZXIoZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoISQodGhpcykuaGFzQ2xhc3MoXCJzZWFyY2gtbmF2LWl0ZW0tYnM0XCIpKSB7XG4gICAgICAgICQoJy5zZWFyY2gtbmF2LWl0ZW0tYnM0JykucmVtb3ZlQ2xhc3MoJ29wZW4nKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBcbiAgICAkKGRvY3VtZW50KS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uKGUpIHtcbiAgICAgIGlmICgkKGUudGFyZ2V0KS5pcyhcIi5pY29uLWV4cGFuZGVkLXNlYXJjaC1pY29uXCIpID09PSBmYWxzZSkge1xuICAgICAgICAgICQoXCIuc2VhcmNoLW5hdi1pdGVtLWJzNFwiKS5yZW1vdmVDbGFzcyhcIm9wZW5cIik7XG4gICAgICB9XG4gICAgfSk7ICAgIFxuXG4gICAgY29uc3QgZ2xvYmFsTmF2QWNjZXNzaWJpbGl0eSA9ICgoKSA9PiB7XG4gICAgICBsZXQgcHJvZHVjdHNUYWIgPSAkKCcubmF2YmFyLWxlZnQgbGk6bnRoLWNoaWxkKDEpIC5nYS1jdGEnKTtcbiAgICAgIGxldCBzb2x1dGlvbnNUYWIgPSAkKCcubmF2YmFyLWxlZnQgbGk6bnRoLWNoaWxkKDIpIC5zdWJuYXZfX3JpZ2h0IC5zdWJuYXZfX3JpZ2h0LWl0ZW0tbGlzdDpsYXN0LWNoaWxkKCkgYS5nYS1jdGEnKTtcbiAgICAgIGxldCB3aHlTcGx1bmtUYWIgPSAkKCcubmF2YmFyLWxlZnQgbGk6bnRoLWNoaWxkKDMpIC5zdWJuYXZfX3JpZ2h0LWl0ZW0tbGlzdDpsYXN0LWNoaWxkKCkgLmxpc3QtY3RhJyk7XG4gICAgICBsZXQgcmVzb3VyY2VzVGFiID0gJCgnLm5hdmJhci1sZWZ0IGxpOm50aC1jaGlsZCg0KSAuc3VibmF2X19yaWdodC1pdGVtLWxpc3Q6bGFzdC1jaGlsZCgpIC5saXN0X19pdGVtcyBsaTpsYXN0LWNoaWxkKCkgLmxpc3QtY3RhJyk7XG4gICAgICBsZXQgc3VwcG9ydFRhYiA9ICQoJy5uYXZJdGVtLXJpZ2h0IHVsIGxpOmxhc3QtY2hpbGQoKScpO1xuICAgICAgJCgnLnNlYXJjaC1uYXYtaXRlbS1iczQgYScpLmF0dHIoJ2hyZWYnLCAnIycpO1xuXG4gICAgICAkKCcubmF2LWl0ZW0tY29tcG9uZW50Lm5hdkl0ZW0tbGVmdCcpLm9uKCdrZXlkb3duJywgZnVuY3Rpb24oZSkge1xuICAgICAgICAgIGlmIChlLmtleUNvZGUgPT0gMTMpIHtcbiAgICAgICAgICAgICAgJCh0aGlzKS50b2dnbGVDbGFzcygnc2hvdycpO1xuICAgICAgICAgICAgICAkKCcubmF2LWl0ZW0tY29tcG9uZW50Jykubm90KHRoaXMpLnJlbW92ZUNsYXNzKCdzaG93Jyk7XG4gICAgICAgICAgICAgICQoJy5jb250YWluZXItZmx1aWQubm8tcGFkZGluZycpLmFkZENsYXNzKCdvZmZzZXRfX2xlZnQnKTtcbiAgICAgICAgICB9IGVsc2UgaWYgKGUua2V5Q29kZSA9PSA5KSB7XG4gICAgICAgICAgICAgIGxldCBzaG93Q2xhc3MgPSAkKCcubmF2YmFyLW5hdicpLmZpbmQoJy5zaG93JykubGVuZ3RoO1xuICAgICAgICAgICAgICBpZiAoc2hvd0NsYXNzID09IDApIHtcbiAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAgICQodGhpcykubmV4dCgpLmZpbmQoJy5uYXZJdGVtIGEnKS5mb2N1cygpO1xuICAgICAgICAgICAgICAgICAgJCgnLm5hdi1pdGVtLWNvbXBvbmVudCcpLm5vdCh0aGlzKS5yZW1vdmVDbGFzcygnc2hvdycpO1xuICAgICAgICAgICAgICAgICAgbGV0IG5leHRFbGVtZW50ID0gJCh0aGlzKS5uZXh0KCkubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgaWYgKG5leHRFbGVtZW50ID09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAkKCcubmF2SXRlbS1yaWdodCAubmF2SXRlbSBhJykuZm9jdXMoKTtcbiAgICAgICAgICAgICAgICAgICAgICBpZiAoZS5rZXlDb2RlID09IDEzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICQoJy5uYXZJdGVtLXJpZ2h0JykudG9nZ2xlQ2xhc3MoJ3Nob3cnKTtcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgJCgnLm5hdi1pdGVtLWNvbXBvbmVudC5uYXZJdGVtLXJpZ2h0Jykub24oJ2tleWRvd24nLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgaWYgKGUua2V5Q29kZSA9PSAxMykge1xuICAgICAgICAgICAgICAkKCcuY29udGFpbmVyLWZsdWlkLm5vLXBhZGRpbmcnKS5yZW1vdmVDbGFzcygnb2Zmc2V0X19sZWZ0Jyk7XG4gICAgICAgICAgICAgICQoJy5uYXYtaXRlbS1jb21wb25lbnQubmF2SXRlbS1sZWZ0JykucmVtb3ZlQ2xhc3MoJ3Nob3cnKTtcbiAgICAgICAgICAgICAgJCgnLm5hdkl0ZW0tcmlnaHQnKS50b2dnbGVDbGFzcygnc2hvdycpO1xuXG4gICAgICAgICAgfSBlbHNlIGlmIChlLmtleUNvZGUgPT0gOSkge1xuICAgICAgICAgICAgICBsZXQgc2hvd0NsYXNzID0gJCgnLm5hdmJhci1uYXYnKS5maW5kKCcuc2hvdycpLmxlbmd0aDtcbiAgICAgICAgICAgICAgaWYgKHNob3dDbGFzcyA9PSAwKSB7XG4gICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgICAkKHRoaXMpLm5leHQoKS5maW5kKCdhJykuZm9jdXMoKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICAkKFwiLm5hdmJhci1sZWZ0IGxpOm50aC1jaGlsZCgyKVwiKS5vbigna2V5ZG93bicsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAkKCcuaXRlbXNfX2NvbHVtbnMnKS5wYXJlbnRzKCcuc3VibmF2X19yaWdodC1pdGVtLWxpc3QnKS5hZGRDbGFzcygnc3VibmF2X19yaWdodC1pdGVtLWxpc3QtdHdvQ29sdW1uJyk7XG4gICAgICB9KTtcblxuICAgICAgJChcIi5uYXZiYXItcmlnaHQgbGk6bnRoLWNoaWxkKDMpXCIpLm9uKCdrZXlkb3duJywgZnVuY3Rpb24oZSkge1xuICAgICAgICAgIGlmIChlLmtleUNvZGUgPT0gMTMpIHtcbiAgICAgICAgICAgICAgJCgnLnNwbHVuay1oZWFkZXItdjInKS5maW5kKCdsaScpLnJlbW92ZUNsYXNzKCdzaG93Jyk7XG4gICAgICAgICAgICAgICQodGhpcykudG9nZ2xlQ2xhc3MoJ29wZW4nKTtcbiAgICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgJChcIi5uYXZiYXItcmlnaHQgbGk6bnRoLWNoaWxkKDQpXCIpLm9uKCdrZXlkb3duJywgZnVuY3Rpb24oZSkge1xuICAgICAgICAgIGlmIChlLmtleUNvZGUgPT0gMTMpIHtcbiAgICAgICAgICAgICAgJCgnLnNwbHVuay1oZWFkZXItdjInKS5maW5kKCdsaScpLnJlbW92ZUNsYXNzKCdzaG93Jyk7XG4gICAgICAgICAgICAgICQodGhpcykudG9nZ2xlQ2xhc3MoJ29wZW4nKTtcbiAgICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgJCgnLnNlYXJjaC1uYXYtaXRlbS1iczQnKS5vbigna2V5ZG93bicsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICBpZiAoZS5rZXlDb2RlID09IDEzKSB7XG4gICAgICAgICAgICAgICQoJy5jb250YWluZXItZmx1aWQubm8tcGFkZGluZycpLnJlbW92ZUNsYXNzKCdvZmZzZXRfX2xlZnQnKTtcbiAgICAgICAgICAgICAgJCgnLnNwbHVuay1oZWFkZXItdjInKS5maW5kKCdsaScpLnJlbW92ZUNsYXNzKCdzaG93Jyk7XG4gICAgICAgICAgICAgICQodGhpcykudG9nZ2xlQ2xhc3MoJ29wZW4nKTtcbiAgICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgJCgnLm1tLWlucHV0Jykub24oJ2tleWRvd24nLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgaWYgKGUua2V5Q29kZSA9PSAyNykge1xuICAgICAgICAgICAgICAkKCcuc2VhcmNoLW5hdi1pdGVtLWJzNCcpLnJlbW92ZUNsYXNzKCdvcGVuJyk7XG4gICAgICAgICAgICAgICQoJy5zZWFyY2gtbmF2LWl0ZW0tYnM0IGEnKS5mb2N1cygpO1xuICAgICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICAkKCcubmF2LWl0ZW0tY29tcG9uZW50Jykub24oJ2tleWRvd24nLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgaWYgKGUuc2hpZnRLZXkgJiYgZS5rZXlDb2RlID09IDkpIHtcbiAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAkKHRoaXMpLnByZXYoKS5maW5kKCcubmF2SXRlbSBhJykuZm9jdXMoKTtcbiAgICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgJCgnLmZyZWUtc3BsdW5rIGEnKS5vbigna2V5ZG93bicsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICBpZiAoZS5rZXlDb2RlID09IDEzKSB7XG4gICAgICAgICAgICAgICQodGhpcykuY2xpY2soKTtcbiAgICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgJChwcm9kdWN0c1RhYikub24oJ2tleWRvd24nLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgaWYgKGUua2V5Q29kZSA9PSA5KSB7XG4gICAgICAgICAgICAgICQoJy5uYXZiYXItbGVmdCBsaTpudGgtY2hpbGQoMSknKS5yZW1vdmVDbGFzcygnc2hvdycpO1xuICAgICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICAkKHNvbHV0aW9uc1RhYikub24oJ2tleWRvd24nLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgaWYgKGUua2V5Q29kZSA9PSA5KSB7XG4gICAgICAgICAgICAgICQoJy5uYXZiYXItbGVmdCBsaTpudGgtY2hpbGQoMiknKS5yZW1vdmVDbGFzcygnc2hvdycpO1xuICAgICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICAkKHdoeVNwbHVua1RhYikub24oJ2tleWRvd24nLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgaWYgKGUua2V5Q29kZSA9PSA5KSB7XG4gICAgICAgICAgICAgICQoJy5uYXZiYXItbGVmdCBsaTpudGgtY2hpbGQoMyknKS5yZW1vdmVDbGFzcygnc2hvdycpO1xuICAgICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICAkKHJlc291cmNlc1RhYikub24oJ2tleWRvd24nLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgaWYgKGUua2V5Q29kZSA9PSA5KSB7XG4gICAgICAgICAgICAgICQoJy5uYXZiYXItbGVmdCBsaTpudGgtY2hpbGQoNCknKS5yZW1vdmVDbGFzcygnc2hvdycpO1xuICAgICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICAkKHN1cHBvcnRUYWIpLm9uKCdrZXlkb3duJywgZnVuY3Rpb24oZSkge1xuICAgICAgICAgIGlmIChlLmtleUNvZGUgPT0gOSkge1xuICAgICAgICAgICAgICAkKCcubmF2SXRlbS1yaWdodCcpLnJlbW92ZUNsYXNzKCdzaG93Jyk7XG4gICAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgICQoJy5jbS1kcm9wZG93biBsaTpsYXN0LWNoaWxkJykub24oJ2tleWRvd24nLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgaWYgKGUua2V5Q29kZSA9PSA5KSB7XG4gICAgICAgICAgICAgICQoXCIubmF2YmFyLXJpZ2h0IGxpOm50aC1jaGlsZCgzKVwiKS5yZW1vdmVDbGFzcygnb3BlbicpO1xuICAgICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBpZiAoJCgnLnNwbHVuay1sb2dvLmxvZ28taW1hZ2Uuc2Vjb25kJykubGVuZ3RoKSB7XG4gICAgICAgICQoJy5uYXYtaXRlbS1jb21wb25lbnQubmF2SXRlbS1sZWZ0Jykub24oJ2tleWRvd24nLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgJCgnLmNvbnRhaW5lci1mbHVpZC5uby1wYWRkaW5nJykucmVtb3ZlQ2xhc3MoJ29mZnNldF9fbGVmdCcpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgJCgnLm5hdi1pdGVtJykub24oJ2tleWRvd24nLCBmdW5jdGlvbihlKSB7XG4gICAgICAgIGlmIChlLnNoaWZ0S2V5ICYmIGUua2V5Q29kZSA9PSA5KSB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAkKHRoaXMpLnByZXYoKS5maW5kKCdhJykuZm9jdXMoKTtcbiAgICAgICAgICAgIGlmICgkKHRoaXMpLnByZXYoJ2xpJykuaGFzQ2xhc3MoJ25hdkl0ZW0tcmlnaHQnKSkge1xuICAgICAgICAgICAgICAgICQoJy5uYXZJdGVtLmZseW91dC1uYXZJdGVtIGEnKS5mb2N1cygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgJCgnLm5hdkl0ZW0tcmlnaHQnKS5vbigna2V5ZG93bicsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICBpZiAoZS5zaGlmdEtleSAmJiBlLmtleUNvZGUgPT0gOSkge1xuICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICQoJy5uYXZiYXItbGVmdCBsaTpudGgtY2hpbGQoNCknKS5maW5kKCdhLm5hdkl0ZW0tbGluaycpLmZvY3VzKCk7XG4gICAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgICQoJy5uYXZiYXItbGVmdCAubmF2LWl0ZW0tY29tcG9uZW50Jykub24oJ2tleWRvd24nLCBmdW5jdGlvbihlKSB7XG4gICAgICAgIGlmIChlLnNoaWZ0S2V5ICYmIGUua2V5Q29kZSA9PSA5KSB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBpZigkKHRoaXMpLnByZXYoKS5maW5kKCcubmF2SXRlbSBhJykubGVuZ3RoIDw9IDApIHtcbiAgICAgICAgICAgICAgICAkKCcubmF2YmFyLWJyYW5kLnRvcG5hdicpLmZvY3VzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAkKHRoaXMpLnByZXYoKS5maW5kKCcubmF2SXRlbSBhJykuZm9jdXMoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgICQoJyNhY2NvdW50IGxpJykub24oJ2tleWRvd24nLCBmdW5jdGlvbihlKSB7XG4gICAgICAgIGlmKCQoJyNhY2NvdW50JykuZmluZCgnI2xvZ291dCcpLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgICAgaWYoJCh0aGlzKS5maW5kKCcjc2lnbklkJykubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgICAgICBpZiAoZS5rZXlDb2RlID09IDkpIHtcbiAgICAgICAgICAgICAgJChcIi5uYXZiYXItcmlnaHQgbGk6bnRoLWNoaWxkKDQpXCIpLnJlbW92ZUNsYXNzKCdvcGVuJyk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICAkKCcjYWNjb3VudCBsaS5sb2dnZWRpbi11c2VyLWxpbmsnKS5vbigna2V5ZG93bicsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgaWYoJCh0aGlzKS5maW5kKCcjbG9nb3V0JykubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgICAgaWYgKGUua2V5Q29kZSA9PSA5KSB7XG4gICAgICAgICAgICAkKFwiLm5hdmJhci1yaWdodCBsaTpudGgtY2hpbGQoNClcIikucmVtb3ZlQ2xhc3MoJ29wZW4nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBjb25zdCBjaGVja09mZnNldExlZnQgPSAoKSA9PiB7XG4gICAgICBjb25zdCBuYXZJdGVtQ29tcG9uZW50TGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5zcGx1bmstaGVhZGVyLXYyLWRlc2t0b3AgLm5hdmJhci1uYXYgLm5hdi1pdGVtLWNvbXBvbmVudC5tZWdhLW1lbnUtbmF2Jyk7XG4gICAgICBpZiAobmF2SXRlbUNvbXBvbmVudExpc3QgPT09IG51bGwpIHRocm93IG5ldyBFcnJvcihgQ291bGRuJ3QgZmluZCB0aGUgZ2xvYmFsIG5hdiBpdGVtcy4uLmApO1xuXG4gICAgICBuYXZJdGVtQ29tcG9uZW50TGlzdC5mb3JFYWNoKChuYXZJdGVtKT0+e1xuICAgICAgICBjb25zdCBnZXRSaWdodExpc3RJdGVtID0gbmF2SXRlbS5xdWVyeVNlbGVjdG9yQWxsKCcuc3VibmF2X19yaWdodC1pdGVtLWxpc3QnKS5sZW5ndGg7XG4gICAgICAgIGNvbnN0IGdldEl0ZW1Db2x1bW4gPSBuYXZJdGVtLnF1ZXJ5U2VsZWN0b3JBbGwoJy5pdGVtc19fY29sdW1ucycpLmxlbmd0aDtcbiAgICAgICAgY29uc3QgZ2V0TGVmdExpc3RJdGVtID0gbmF2SXRlbS5xdWVyeVNlbGVjdG9yKCcuc3VibmF2X19sZWZ0LWl0ZW0tbGlzdCcpO1xuICAgICAgICBjb25zdCBmbHlPdXRXcmFwcGVyRWxlbWVudCA9IG5hdkl0ZW0ucXVlcnlTZWxlY3RvcignLmZseW91dFdyYXBwZXInKTtcblxuICAgICAgICBpZihnZXRSaWdodExpc3RJdGVtID4gMSAmJiBnZXRJdGVtQ29sdW1uID4gMCl7XG4gICAgICAgICAgICAvLyQodGhpcykucGFyZW50cygnLm5hdmJhci1jb2xsYXBzZScpLmFkZENsYXNzKCdvZmZzZXRfX2xlZnQnKTtcbiAgICAgICAgICAgIGZseU91dFdyYXBwZXJFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2NlbnRlcmVkLWZseW91dFdyYXBwZXInKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmKGdldFJpZ2h0TGlzdEl0ZW0gPiAxKXtcbiAgICAgICAgICAgIC8vJCh0aGlzKS5wYXJlbnRzKCcubmF2YmFyLWNvbGxhcHNlJykuYWRkQ2xhc3MoJ29mZnNldF9fbGVmdCcpO1xuICAgICAgICAgICAgZmx5T3V0V3JhcHBlckVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnY2VudGVyZWQtZmx5b3V0V3JhcHBlcicpO1xuICAgICAgICB9XG5cbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICByZXR1cm4ge1xuICAgICAgaW5pdFxuICAgIH07XG4gIH0pKCk7XG5cbiAgJCgoKSA9PiB7XG4gICAgaWYgKCQoJy5nbG9iYWwtaGVhZGVyLXYyLXdyYXBwZXInKS5sZW5ndGggPiAwKSB7XG4gICAgICBHbG9iYWxIZWFkZXIuaW5pdCgpO1xuICAgIH1cbiAgfSlcblxuLy9BZG9iZSBUYXJnZXQgUHJlaGlkaW5nIE9ObHkgaWYgdGhlIGNvbXBvbmVudCBpcyBzZWxlY3RlZCBmb3IgcGVyc29uYWxpemF0aW9uXG4hZnVuY3Rpb24gKGUsIGEsIG4sIHQpIHtcbiAgaWYgKGEpIHJldHVybjtcbiAgdmFyIGkgPSBlLmhlYWQ7IGlmIChpKSB7XG4gICAgdmFyIG8gPSBlLmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgICBvLmlkID0gXCJhbGxveS1wcmVoaWRpbmdcIiwgby5pbm5lclRleHQgPSBuLCBpLmFwcGVuZENoaWxkKG8pLFxuICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7IG8ucGFyZW50Tm9kZSAmJiBvLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobykgfSwgdClcbiAgfVxufVxuICAoZG9jdW1lbnQsIGRvY3VtZW50LmxvY2F0aW9uLmhyZWYuaW5kZXhPZihcImFkb2JlX2F1dGhvcmluZ19lbmFibGVkXCIpICE9PSAtMSwgXCJbZGF0YS1hdC1sb2NhdGlvbl0geyBvcGFjaXR5OiAwICFpbXBvcnRhbnQgfVwiLCAzMDAwKTtcblxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///838\n")},839:function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi93ZWJwYWNrL3NpdGUvY29tcG9uZW50cy9nbG9iYWwtaGVhZGVyLWNvbXBvbmVudC0yLnNjc3M/NjdlNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI4MzkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///839\n")},877:function(module,__webpack_exports__,__webpack_require__){eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./src/main/webpack/components/global-header/v3/global-header.js\nvar global_header = __webpack_require__(838);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/asyncToGenerator.js\nvar asyncToGenerator = __webpack_require__(2);\nvar asyncToGenerator_default = /*#__PURE__*/__webpack_require__.n(asyncToGenerator);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/regenerator/index.js\nvar regenerator = __webpack_require__(0);\nvar regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);\n\n// CONCATENATED MODULE: ./src/main/webpack/components/global-header/v3/global-header-mobile.js\n\n\n(function () {\n  var GlobalHeaderMobile = function () {\n    // Here we initialize the variables\n    var mobileHeaderRoot = null;\n    var destinationSendToBottom = null;\n    var hamburgerSwitch = null;\n    var primarySectionSwitch = null;\n    var movingSectionList = [];\n    var rootElement = document.querySelector('html');\n    var init = function init() {\n      var elementRoot = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      // Here we look for the mobile version of the global nav\n      mobileHeaderRoot = elementRoot;\n\n      // now we look for the hamburger switch\n      hamburgerSwitch = document.querySelector('#splunk-mainMenu-switch');\n      if (hamburgerSwitch === null) throw new Error(\"couldn't find the hamburger switch...\");\n\n      //Now we look for the subnav secondary section radio buttons\n      primarySectionSwitch = document.querySelector('#splunk-nav-switch-default');\n      if (primarySectionSwitch === null) throw new Error(\"primary switch was not found...\");\n\n      // here we check if the mobile version is running is it does then we start all\n      if (mobileHeaderRoot !== null) startProcessing();\n\n      // console.log('finished init...');\n    };\n    var startProcessing = /*#__PURE__*/function () {\n      var _ref = asyncToGenerator_default()(/*#__PURE__*/regenerator_default.a.mark(function _callee() {\n        return regenerator_default.a.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return initializeSwitches();\n            case 2:\n              _context.next = 4;\n              return addFunctionalityToSwitches();\n            case 4:\n              _context.next = 6;\n              return findAndMoveElementsSetToBottom();\n            case 6:\n              _context.next = 8;\n              return setAnimationEndActions();\n            case 8:\n              _context.next = 10;\n              return closeLanguageGlobeEvent();\n            case 10:\n              _context.next = 12;\n              return handleLanguageLinks();\n            case 12:\n              return _context.abrupt(\"return\", true);\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function startProcessing() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    var handleLanguageLinks = /*#__PURE__*/function () {\n      var _ref2 = asyncToGenerator_default()(/*#__PURE__*/regenerator_default.a.mark(function _callee2() {\n        var languageLinksGroup;\n        return regenerator_default.a.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              languageLinksGroup = document.querySelectorAll('.global-header-V3 .splunk-header-v2-mobile .mblNav-dropdown .nav-item .topnav.nav-link');\n              if (!(languageLinksGroup === null)) {\n                _context2.next = 3;\n                break;\n              }\n              return _context2.abrupt(\"return\", new Error(\"For some reason we couldn't find the languages dropdown links in the mobile header :/\"));\n            case 3:\n              languageLinksGroup.forEach(function (languageLink) {\n                languageLink.addEventListener('mousedown', function (event) {\n                  event.preventDefault(); //This is a patchy solution to the closeLanguageGlobeEvent function since 'focusout' event is triggered before the 'mouseup' event\n                });\n              });\n              return _context2.abrupt(\"return\", true);\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      return function handleLanguageLinks() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    var closeLanguageGlobeEvent = /*#__PURE__*/function () {\n      var _ref3 = asyncToGenerator_default()(/*#__PURE__*/regenerator_default.a.mark(function _callee3() {\n        var globeElement;\n        return regenerator_default.a.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              globeElement = mobileHeaderRoot.querySelector('.mobile-languageDD');\n              if (!(globeElement === null)) {\n                _context3.next = 3;\n                break;\n              }\n              throw new Error(\"Couldn't find the language button...\");\n            case 3:\n              globeElement.addEventListener('click', function (event) {\n                if (globeElement.classList.contains('openDropdown')) globeElement.classList.remove('openDropdown');else globeElement.classList.add('openDropdown');\n              });\n              globeElement.addEventListener('focusout', function (event) {\n                if (globeElement.classList.contains('openDropdown')) globeElement.classList.remove('openDropdown');\n              });\n              return _context3.abrupt(\"return\", true);\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      return function closeLanguageGlobeEvent() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    var setAnimationEndActions = /*#__PURE__*/function () {\n      var _ref4 = asyncToGenerator_default()(/*#__PURE__*/regenerator_default.a.mark(function _callee4() {\n        return regenerator_default.a.wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", true);\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }));\n      return function setAnimationEndActions() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    var addFunctionalityToSwitches = /*#__PURE__*/function () {\n      var _ref5 = asyncToGenerator_default()(/*#__PURE__*/regenerator_default.a.mark(function _callee5() {\n        return regenerator_default.a.wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              setHamburgerToHoldTheScroll();\n              return _context5.abrupt(\"return\", true);\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }));\n      return function addFunctionalityToSwitches() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n    var setHamburgerToHoldTheScroll = /*#__PURE__*/function () {\n      var _ref6 = asyncToGenerator_default()(/*#__PURE__*/regenerator_default.a.mark(function _callee6() {\n        return regenerator_default.a.wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!(hamburgerSwitch === null)) {\n                _context6.next = 2;\n                break;\n              }\n              throw new Error(\"couldn't find the hambuerger switch...\");\n            case 2:\n              hamburgerSwitch.addEventListener('click', hamburgerClickFunction);\n              return _context6.abrupt(\"return\", true);\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }));\n      return function setHamburgerToHoldTheScroll() {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n    var hamburgerClickFunction = /*#__PURE__*/function () {\n      var _ref7 = asyncToGenerator_default()(/*#__PURE__*/regenerator_default.a.mark(function _callee7() {\n        return regenerator_default.a.wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return holdTheScrollFunction();\n            case 2:\n              _context7.next = 4;\n              return initializeSubNavs();\n            case 4:\n              return _context7.abrupt(\"return\", true);\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7);\n      }));\n      return function hamburgerClickFunction() {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n    var holdTheScrollFunction = function holdTheScrollFunction() {\n      if (rootElement === null) throw newError(\"HTML element not set...\");\n      if (hamburgerSwitch.checked) rootElement.classList.add('holdTheScroll');\n      if (!hamburgerSwitch.checked) rootElement.classList.remove('holdTheScroll');\n      return true;\n    };\n    var initializeSubNavs = /*#__PURE__*/function () {\n      var _ref8 = asyncToGenerator_default()(/*#__PURE__*/regenerator_default.a.mark(function _callee8() {\n        return regenerator_default.a.wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              if (!primarySectionSwitch.checked) primarySectionSwitch.checked = true;\n              return _context8.abrupt(\"return\", true);\n            case 2:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8);\n      }));\n      return function initializeSubNavs() {\n        return _ref8.apply(this, arguments);\n      };\n    }();\n    var initializeSwitches = /*#__PURE__*/function () {\n      var _ref9 = asyncToGenerator_default()(/*#__PURE__*/regenerator_default.a.mark(function _callee9() {\n        return regenerator_default.a.wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              //First we make sure the hamburger check us 'unchecked'\n              if (hamburgerSwitch.checked) hamburgerSwitch.checked = false;\n\n              //First we make sure the primary switch is checked so when showing the navigation we show the primary section first\n              _context9.next = 3;\n              return initializeSubNavs();\n            case 3:\n              return _context9.abrupt(\"return\", true);\n            case 4:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9);\n      }));\n      return function initializeSwitches() {\n        return _ref9.apply(this, arguments);\n      };\n    }();\n    var findAndMoveElementsSetToBottom = /*#__PURE__*/function () {\n      var _ref10 = asyncToGenerator_default()(/*#__PURE__*/regenerator_default.a.mark(function _callee10() {\n        return regenerator_default.a.wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return findDestinationForelementsToMove();\n            case 2:\n              _context10.next = 4;\n              return findElementsToMove();\n            case 4:\n              _context10.next = 6;\n              return processElementsAndMoveToBottom();\n            case 6:\n              return _context10.abrupt(\"return\", true);\n            case 7:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10);\n      }));\n      return function findAndMoveElementsSetToBottom() {\n        return _ref10.apply(this, arguments);\n      };\n    }();\n    var findElementsToMove = /*#__PURE__*/function () {\n      var _ref11 = asyncToGenerator_default()(/*#__PURE__*/regenerator_default.a.mark(function _callee11() {\n        var movingSectionListElements;\n        return regenerator_default.a.wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              movingSectionListElements = document.querySelectorAll('.featuredSection .featuredSection-list .hideSendBottomMobileListItem .items__sendToBottom');\n              if (!(movingSectionListElements === null)) {\n                _context11.next = 3;\n                break;\n              }\n              throw new Error('Weird we got an error looking for elements to move to the bottom...');\n            case 3:\n              movingSectionListElements.forEach(function (elementToMove) {\n                var sectionElementsToMove = {\n                  'originalElement': elementToMove,\n                  'elementObject': getRootOfElementToMove(elementToMove),\n                  'parentElement': lookForParentElement(elementToMove),\n                  'parentFeaturedSectionElement': getParentFeaturedSection(elementToMove)\n                };\n                sectionElementsToMove.destinationToMove = lookforDestinationElement(sectionElementsToMove.parentElement);\n                movingSectionList.push(sectionElementsToMove);\n              });\n              return _context11.abrupt(\"return\", true);\n            case 5:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11);\n      }));\n      return function findElementsToMove() {\n        return _ref11.apply(this, arguments);\n      };\n    }();\n    var getRootOfElementToMove = function getRootOfElementToMove() {\n      var childElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      if (childElement === null) throw new Error('child element is missing from the getRootOfElementToMove function...');\n      var secondaryLevelParentElement = childElement.closest('.list-item');\n      if (secondaryLevelParentElement === null) throw new Error(\"couldn't find the root of the element to move...\");\n      return secondaryLevelParentElement;\n    };\n    var lookForParentElement = function lookForParentElement() {\n      var childElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      if (childElement === null) throw new Error('child element is missing from the lookForParentElement function...');\n      var secondaryLevelParentElement = childElement.closest('.navSecondaryLevel');\n      if (secondaryLevelParentElement !== null) return secondaryLevelParentElement;\n    };\n    var getParentFeaturedSection = function getParentFeaturedSection() {\n      var childElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      if (childElement === null) throw new Error('child element is missing from the getParentFeaturedSection function...');\n      var FeaturedParentElement = childElement.closest('.featuredSection-list');\n      if (FeaturedParentElement !== null) return FeaturedParentElement;\n    };\n    var lookforDestinationElement = function lookforDestinationElement() {\n      var parentElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      if (parentElement === null) throw new Error('child element is missing from the lookForParentElement function...');\n      var destinationToMoveElement = parentElement.querySelector('.subNavSection');\n      if (destinationToMoveElement === null) throw new Error(\"Something went wrong... can't find destination to move some elements\");\n      return destinationToMoveElement;\n    };\n    var findDestinationForelementsToMove = /*#__PURE__*/function () {\n      var _ref12 = asyncToGenerator_default()(/*#__PURE__*/regenerator_default.a.mark(function _callee12() {\n        return regenerator_default.a.wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              destinationSendToBottom = document.querySelector('.step-menu-container-secondLevel');\n              if (!(destinationSendToBottom === null)) {\n                _context12.next = 3;\n                break;\n              }\n              throw new Error(\"Couldn't find any destination element to move the elements...\");\n            case 3:\n              return _context12.abrupt(\"return\", true);\n            case 4:\n            case \"end\":\n              return _context12.stop();\n          }\n        }, _callee12);\n      }));\n      return function findDestinationForelementsToMove() {\n        return _ref12.apply(this, arguments);\n      };\n    }();\n    var processElementsAndMoveToBottom = /*#__PURE__*/function () {\n      var _ref13 = asyncToGenerator_default()(/*#__PURE__*/regenerator_default.a.mark(function _callee13() {\n        return regenerator_default.a.wrap(function _callee13$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              if (!(movingSectionList.length === 0)) {\n                _context13.next = 2;\n                break;\n              }\n              return _context13.abrupt(\"return\", true);\n            case 2:\n              movingSectionList.forEach(function (elementToMove) {\n                var element = document.createElement('div');\n                element.classList.add('subNavSection-item');\n                element.classList.add('additional-item-section');\n                var elementWrapper = document.createElement('div');\n                elementWrapper.classList.add('subNavSection-item-list');\n                var emptyWrapper = document.createElement('div');\n                emptyWrapper.appendChild(elementToMove.elementObject);\n                elementWrapper.appendChild(emptyWrapper);\n                element.appendChild(elementWrapper);\n                elementToMove.destinationToMove.appendChild(element);\n                elementToMove.parentFeaturedSectionElement.remove();\n              });\n            case 3:\n            case \"end\":\n              return _context13.stop();\n          }\n        }, _callee13);\n      }));\n      return function processElementsAndMoveToBottom() {\n        return _ref13.apply(this, arguments);\n      };\n    }();\n    return {\n      init: init\n    };\n  }();\n  window.addEventListener('load', function () {\n    var mobileHeaderElement = document.querySelector('.global-header-v2-wrapper .splunk-header-v2-mobile');\n    if (mobileHeaderElement !== null) {\n      mobileHeaderElement.GlobalHeaderMobile = GlobalHeaderMobile;\n      mobileHeaderElement.GlobalHeaderMobile.init(mobileHeaderElement);\n    }\n  });\n})();\n// EXTERNAL MODULE: ./src/main/webpack/components/list-item/v2/list-item.js\nvar list_item = __webpack_require__(658);\n\n// EXTERNAL MODULE: ./src/main/webpack/site/components/global-header-component-2.scss\nvar global_header_component_2 = __webpack_require__(839);\n\n// CONCATENATED MODULE: ./src/main/webpack/site/components/global-header-component-2.ts\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///877\n")}});